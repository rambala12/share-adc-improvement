Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    control.o(i.ADC0_IRQHandler) refers to control.o(i.Control_HBLED) for Control_HBLED
    control.o(i.ADC0_IRQHandler) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    control.o(i.ADC0_IRQHandler) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for osMessageQueueGetCount
    control.o(i.ADC0_IRQHandler) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    control.o(i.ADC0_IRQHandler) refers to control.o(.data) for .data
    control.o(i.ADC0_IRQHandler) refers to threads.o(.data) for results_q
    control.o(i.Control_DutyCycle_Handler) refers to timers.o(i.PWM_Set_Value) for PWM_Set_Value
    control.o(i.Control_DutyCycle_Handler) refers to control.o(.data) for .data
    control.o(i.Control_HBLED) refers to fflti.o(.text) for __aeabi_i2f
    control.o(i.Control_HBLED) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    control.o(i.Control_HBLED) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    control.o(i.Control_HBLED) refers to frlef.o(x$fpl$frleqf) for __aeabi_cfrcmple
    control.o(i.Control_HBLED) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    control.o(i.Control_HBLED) refers to ffixi.o(.text) for __aeabi_f2iz
    control.o(i.Control_HBLED) refers to fx.o(i.Multiply_FX) for Multiply_FX
    control.o(i.Control_HBLED) refers to fx.o(i.Add_FX) for Add_FX
    control.o(i.Control_HBLED) refers to fx.o(i.Subtract_FX) for Subtract_FX
    control.o(i.Control_HBLED) refers to timers.o(i.PWM_Set_Value) for PWM_Set_Value
    control.o(i.Control_HBLED) refers to control.o(.data) for .data
    control.o(i.Control_HBLED) refers to control.o(.bss) for .bss
    control.o(i.Control_HBLED) refers to main.o(.data) for control_mode
    control.o(i.Init_Buck_HBLED) refers to control.o(i.Init_ADC_HBLED) for Init_ADC_HBLED
    control.o(i.Init_Buck_HBLED) refers to timers.o(i.PWM_Init) for PWM_Init
    control.o(i.Init_Buck_HBLED) refers to control.o(.data) for .data
    control.o(i.Set_DAC_mA) refers to fflti.o(.text) for __aeabi_ui2f
    control.o(i.Set_DAC_mA) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    control.o(i.Set_DAC_mA) refers to ffixui.o(.text) for __aeabi_f2uiz
    control.o(i.UpdatePID) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    control.o(i.UpdatePID) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    control.o(i.UpdatePID) refers to frlef.o(x$fpl$frleqf) for __aeabi_cfrcmple
    control.o(i.UpdatePID) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    control.o(i.UpdatePID_FX) refers to fx.o(i.Multiply_FX) for Multiply_FX
    control.o(i.UpdatePID_FX) refers to fx.o(i.Add_FX) for Add_FX
    control.o(i.UpdatePID_FX) refers to fx.o(i.Subtract_FX) for Subtract_FX
    control.o(i.Update_Set_Current) refers to fflti.o(.text) for __aeabi_ui2f
    control.o(i.Update_Set_Current) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    control.o(i.Update_Set_Current) refers to ffixui.o(.text) for __aeabi_f2uiz
    control.o(i.Update_Set_Current) refers to control.o(.data) for .data
    dma.o(i.Configure_DMA_For_Playback) refers to dma.o(.data) for .data
    dma.o(i.DMA0_IRQHandler) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    dma.o(i.DMA0_IRQHandler) refers to leds.o(i.Control_RGB_LEDs) for Control_RGB_LEDs
    dma.o(i.DMA0_IRQHandler) refers to timers.o(i.TPM0_Start) for TPM0_Start
    dma.o(i.DMA0_IRQHandler) refers to dma.o(.data) for .data
    dma.o(i.DMA0_IRQHandler) refers to threads.o(.data) for t_Refill_Sound_Buffer
    dma.o(i.Start_DMA_Playback) refers to timers.o(i.TPM0_Start) for TPM0_Start
    dma.o(i.Start_DMA_Playback) refers to dma.o(.data) for .data
    fx.o(i.Multiply_FX) refers to llmul.o(.text) for __aeabi_lmul
    main.o(i.main) refers to debug.o(i.Init_Debug_Signals) for Init_Debug_Signals
    main.o(i.main) refers to leds.o(i.Init_RGB_LEDs) for Init_RGB_LEDs
    main.o(i.main) refers to leds.o(i.Control_RGB_LEDs) for Control_RGB_LEDs
    main.o(i.main) refers to sound.o(i.Sound_Disable_Amp) for Sound_Disable_Amp
    main.o(i.main) refers to st7789.o(i.LCD_Init) for LCD_Init
    main.o(i.main) refers to lcd_text.o(i.LCD_Text_Init) for LCD_Text_Init
    main.o(i.main) refers to lcd_text.o(i.LCD_Erase) for LCD_Erase
    main.o(i.main) refers to lcd_text.o(i.LCD_Text_PrintStr_RC) for LCD_Text_PrintStr_RC
    main.o(i.main) refers to delay.o(i.Delay) for Delay
    main.o(i.main) refers to control.o(i.Init_Buck_HBLED) for Init_Buck_HBLED
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(i.main) refers to threads.o(i.Create_OS_Objects) for Create_OS_Objects
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    sound.o(i.Init_Voices) refers to sound.o(.bss) for .bss
    sound.o(i.Init_Waveform) refers to sound.o(.bss) for .bss
    sound.o(i.Play_Tone) refers to delay.o(i.ShortDelay) for ShortDelay
    sound.o(i.Play_Tone) refers to delay.o(i.Delay) for Delay
    sound.o(i.Play_Tone) refers to sound.o(.constdata) for .constdata
    sound.o(i.Play_Waveform_with_DMA) refers to dma.o(i.Configure_DMA_For_Playback) for Configure_DMA_For_Playback
    sound.o(i.Play_Waveform_with_DMA) refers to dma.o(i.Start_DMA_Playback) for Start_DMA_Playback
    sound.o(i.Play_Waveform_with_DMA) refers to sound.o(.bss) for .bss
    sound.o(i.SineTable_Init) refers to dflti.o(.text) for __aeabi_i2d
    sound.o(i.SineTable_Init) refers to dmul.o(.text) for __aeabi_dmul
    sound.o(i.SineTable_Init) refers to d2f.o(.text) for __aeabi_d2f
    sound.o(i.SineTable_Init) refers to sinf.o(i.sinf) for sinf
    sound.o(i.SineTable_Init) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    sound.o(i.SineTable_Init) refers to ffixi.o(.text) for __aeabi_f2iz
    sound.o(i.SineTable_Init) refers to sound.o(.bss) for .bss
    sound.o(i.Sound_Generate_Next_Sample) refers to sound.o(.bss) for .bss
    sound.o(i.Sound_Init) refers to dflti.o(.text) for __aeabi_i2d
    sound.o(i.Sound_Init) refers to dmul.o(.text) for __aeabi_dmul
    sound.o(i.Sound_Init) refers to d2f.o(.text) for __aeabi_d2f
    sound.o(i.Sound_Init) refers to sinf.o(i.sinf) for sinf
    sound.o(i.Sound_Init) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    sound.o(i.Sound_Init) refers to ffixi.o(.text) for __aeabi_f2iz
    sound.o(i.Sound_Init) refers to dma.o(i.DMA_Init) for DMA_Init
    sound.o(i.Sound_Init) refers to timers.o(i.TPM0_Init) for TPM0_Init
    sound.o(i.Sound_Init) refers to timers.o(i.Configure_TPM0_for_DMA) for Configure_TPM0_for_DMA
    sound.o(i.Sound_Init) refers to sound.o(.bss) for .bss
    sound.o(i.Sound_Init) refers to sound.o(.data) for .data
    sound.o(i.Thread_Refill_Sound_Buffer) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    sound.o(i.Thread_Refill_Sound_Buffer) refers to sound.o(.data) for .data
    sound.o(i.Thread_Refill_Sound_Buffer) refers to sound.o(.bss) for .bss
    sound.o(i.Thread_Sound_Manager) refers to fflti.o(.text) for __aeabi_ui2f
    sound.o(i.Thread_Sound_Manager) refers to fdiv.o(.text) for __aeabi_fdiv
    sound.o(i.Thread_Sound_Manager) refers to ffixui.o(.text) for __aeabi_f2uiz
    sound.o(i.Thread_Sound_Manager) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    sound.o(i.Thread_Sound_Manager) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    sound.o(i.Thread_Sound_Manager) refers to dma.o(i.Configure_DMA_For_Playback) for Configure_DMA_For_Playback
    sound.o(i.Thread_Sound_Manager) refers to dma.o(i.Start_DMA_Playback) for Start_DMA_Playback
    sound.o(i.Thread_Sound_Manager) refers to rtx_delay.o(.text.osDelay) for osDelay
    sound.o(i.Thread_Sound_Manager) refers to sound.o(.bss) for .bss
    sound.o(i.Thread_Sound_Manager) refers to threads.o(.data) for t_Refill_Sound_Buffer
    threads.o(i.Create_OS_Objects) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    threads.o(i.Create_OS_Objects) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    threads.o(i.Create_OS_Objects) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    threads.o(i.Create_OS_Objects) refers to threads.o(.constdata) for .constdata
    threads.o(i.Create_OS_Objects) refers to threads.o(.data) for .data
    threads.o(i.Create_OS_Objects) refers to threads.o(i.Thread_Read_TS) for Thread_Read_TS
    threads.o(i.Create_OS_Objects) refers to threads.o(i.Thread_Update_Screen) for Thread_Update_Screen
    threads.o(i.Create_OS_Objects) refers to threads.o(i.Thread_Buck_Update_Setpoint) for Thread_Buck_Update_Setpoint
    threads.o(i.Thread_Buck_Update_Setpoint) refers to rtx_delay.o(.text.osDelay) for osDelay
    threads.o(i.Thread_Buck_Update_Setpoint) refers to control.o(i.Update_Set_Current) for Update_Set_Current
    threads.o(i.Thread_Read_TS) refers to touchscreen.o(i.LCD_TS_Read) for LCD_TS_Read
    threads.o(i.Thread_Read_TS) refers to ui.o(i.UI_Process_Touch) for UI_Process_Touch
    threads.o(i.Thread_Read_TS) refers to rtx_delay.o(.text.osDelay) for osDelay
    threads.o(i.Thread_Update_Screen) refers to ui.o(i.UI_Draw_Screen) for UI_Draw_Screen
    threads.o(i.Thread_Update_Screen) refers to rtx_delay.o(.text.osDelay) for osDelay
    threads.o(.constdata) refers to threads.o(.conststring) for .conststring
    timers.o(i.PIT_IRQHandler) refers to profile.o(.data) for profiling_enabled
    timers.o(i.PIT_IRQHandler) refers to timers.o(.data) for .data
    timers.o(i.PIT_IRQHandler) refers to profile.o(.data) for profile_samples
    timers.o(i.PIT_IRQHandler) refers to region.o(.constdata) for NumProfileRegions
    timers.o(i.PIT_IRQHandler) refers to region.o(.constdata) for RegionTable
    timers.o(i.PIT_IRQHandler) refers to region.o(.data) for RegionCount
    timers.o(i.PIT_IRQHandler) refers to profile.o(.data) for adx_lost
    timers.o(i.PIT_IRQHandler) refers to profile.o(.data) for num_lost
    timers.o(i.TPM0_IRQHandler) refers to timers.o(.data) for .data
    ui.o(i.Clear_Graph) refers to st7789.o(i.LCD_Fill_Rectangle) for LCD_Fill_Rectangle
    ui.o(i.Clear_Graph) refers to ui.o(.constdata) for .constdata
    ui.o(i.Clear_Graph) refers to colors.o(.data) for black
    ui.o(i.Plot_Graph) refers to st7789.o(i.LCD_Plot_Pixel) for LCD_Plot_Pixel
    ui.o(i.Plot_Graph) refers to colors.o(.data) for magenta
    ui.o(i.Plot_Graph) refers to colors.o(.data) for cyan
    ui.o(i.Plot_Graph) refers to control.o(.bss) for set_current_vals
    ui.o(i.UI_Draw_Fields) refers to lcd_text.o(i.LCD_Text_Set_Colors) for LCD_Text_Set_Colors
    ui.o(i.UI_Draw_Fields) refers to lcd_text.o(i.LCD_Text_PrintStr_RC) for LCD_Text_PrintStr_RC
    ui.o(i.UI_Draw_Fields) refers to colors.o(.data) for dark_red
    ui.o(i.UI_Draw_Screen) refers to _printf_pad.o(.text) for _printf_pre_padding
    ui.o(i.UI_Draw_Screen) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    ui.o(i.UI_Draw_Screen) refers to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    ui.o(i.UI_Draw_Screen) refers to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    ui.o(i.UI_Draw_Screen) refers to _printf_dec.o(.text) for _printf_int_dec
    ui.o(i.UI_Draw_Screen) refers to _printf_str.o(.text) for _printf_str
    ui.o(i.UI_Draw_Screen) refers to ui.o(i.UI_Update_Field_Values) for UI_Update_Field_Values
    ui.o(i.UI_Draw_Screen) refers to noretval__2snprintf.o(.text) for __2snprintf
    ui.o(i.UI_Draw_Screen) refers to lcd_text.o(i.LCD_Text_Set_Colors) for LCD_Text_Set_Colors
    ui.o(i.UI_Draw_Screen) refers to lcd_text.o(i.LCD_Text_PrintStr_RC) for LCD_Text_PrintStr_RC
    ui.o(i.UI_Draw_Screen) refers to st7789.o(i.LCD_Fill_Rectangle) for LCD_Fill_Rectangle
    ui.o(i.UI_Draw_Screen) refers to noretval__2sprintf.o(.text) for __2sprintf
    ui.o(i.UI_Draw_Screen) refers to st7789.o(i.LCD_Plot_Pixel) for LCD_Plot_Pixel
    ui.o(i.UI_Draw_Screen) refers to ui.o(.data) for .data
    ui.o(i.UI_Draw_Screen) refers to colors.o(.data) for dark_red
    ui.o(i.UI_Draw_Screen) refers to colors.o(.data) for black
    ui.o(i.UI_Draw_Screen) refers to colors.o(.data) for white
    ui.o(i.UI_Draw_Screen) refers to control.o(.data) for plot_function
    ui.o(i.UI_Draw_Screen) refers to ui.o(.constdata) for .constdata
    ui.o(i.UI_Draw_Screen) refers to colors.o(.data) for magenta
    ui.o(i.UI_Draw_Screen) refers to colors.o(.data) for cyan
    ui.o(i.UI_Draw_Screen) refers to control.o(.bss) for set_current_vals
    ui.o(i.UI_Draw_Slider) refers to st7789.o(i.LCD_Fill_Rectangle) for LCD_Fill_Rectangle
    ui.o(i.UI_Draw_Slider) refers to ui.o(.data) for .data
    ui.o(i.UI_Identify_Field) refers to strlen.o(.text) for strlen
    ui.o(i.UI_Identify_Field) refers to ui.o(.data) for .data
    ui.o(i.UI_Identify_Field) refers to lcd_text.o(.data) for G_LCD_char_width
    ui.o(i.UI_Process_Touch) refers to ui.o(i.UI_Identify_Field) for UI_Identify_Field
    ui.o(i.UI_Process_Touch) refers to ui.o(i.UI_Update_Field_Values) for UI_Update_Field_Values
    ui.o(i.UI_Process_Touch) refers to ui.o(.data) for .data
    ui.o(i.UI_Update_Field_Selects) refers to ui.o(.data) for .data
    ui.o(i.UI_Update_Field_Values) refers to _printf_pad.o(.text) for _printf_pre_padding
    ui.o(i.UI_Update_Field_Values) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    ui.o(i.UI_Update_Field_Values) refers to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    ui.o(i.UI_Update_Field_Values) refers to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    ui.o(i.UI_Update_Field_Values) refers to _printf_dec.o(.text) for _printf_int_dec
    ui.o(i.UI_Update_Field_Values) refers to _printf_str.o(.text) for _printf_str
    ui.o(i.UI_Update_Field_Values) refers to noretval__2snprintf.o(.text) for __2snprintf
    ui.o(i.UI_Update_Volatile_Field_Values) refers to _printf_pad.o(.text) for _printf_pre_padding
    ui.o(i.UI_Update_Volatile_Field_Values) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    ui.o(i.UI_Update_Volatile_Field_Values) refers to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    ui.o(i.UI_Update_Volatile_Field_Values) refers to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    ui.o(i.UI_Update_Volatile_Field_Values) refers to _printf_dec.o(.text) for _printf_int_dec
    ui.o(i.UI_Update_Volatile_Field_Values) refers to _printf_str.o(.text) for _printf_str
    ui.o(i.UI_Update_Volatile_Field_Values) refers to noretval__2snprintf.o(.text) for __2snprintf
    ui.o(i.UI_Update_Volatile_Field_Values) refers to ui.o(i.UI_Update_Field_Values) for i.UI_Update_Field_Values
    ui.o(.data) refers to control.o(.data) for g_duty_cycle
    ui.o(.data) refers to colors.o(.data) for yellow
    ui.o(.data) refers to colors.o(.data) for black
    ui.o(.data) refers to control.o(i.Control_DutyCycle_Handler) for Control_DutyCycle_Handler
    ui.o(.data) refers to colors.o(.data) for dark_red
    ui.o(.data) refers to control.o(i.Control_OnOff_Handler) for Control_OnOff_Handler
    ui.o(.data) refers to colors.o(.data) for dark_cyan
    ui.o(.data) refers to colors.o(.data) for dark_green
    ui.o(.data) refers to control.o(i.Control_IntNonNegative_Handler) for Control_IntNonNegative_Handler
    ui.o(.data) refers to colors.o(.data) for dark_magenta
    ui.o(.data) refers to colors.o(.data) for light_gray
    ui.o(.data) refers to colors.o(.data) for blue
    ui.o(.data) refers to colors.o(.data) for orange
    ui.o(.data) refers to colors.o(.data) for white
    ui.o(.data) refers to colors.o(.data) for dark_gray
    lcd_graphics.o(i.Graphics_Test) refers to st7789.o(i.LCD_Fill_Buffer) for LCD_Fill_Buffer
    lcd_graphics.o(i.Graphics_Test) refers to st7789.o(i.LCD_Refresh) for LCD_Refresh
    lcd_graphics.o(i.Graphics_Test) refers to st7789.o(i.LCD_Plot_Pixel) for LCD_Plot_Pixel
    lcd_graphics.o(i.Graphics_Test) refers to lcd_graphics.o(i.LCD_Draw_Line) for LCD_Draw_Line
    lcd_graphics.o(i.Graphics_Test) refers to lcd_graphics.o(i.LCD_Draw_Circle) for LCD_Draw_Circle
    lcd_graphics.o(i.Graphics_Test) refers to aeabi_sdivfast.o(.text) for __aeabi_idivmod
    lcd_graphics.o(i.LCD_Draw_Circle) refers to lcd_graphics.o(i.LCD_Draw_Line) for LCD_Draw_Line
    lcd_graphics.o(i.LCD_Draw_Circle) refers to st7789.o(i.LCD_Plot_Pixel) for LCD_Plot_Pixel
    lcd_graphics.o(i.LCD_Draw_Line) refers to st7789.o(i.LCD_Plot_Pixel) for LCD_Plot_Pixel
    lcd_graphics.o(i.LCD_Draw_Line) refers to aeabi_sdivfast.o(.text) for __aeabi_idivmod
    lcd_text.o(i.LCD_Erase) refers to st7789.o(i.LCD_Fill_Buffer) for LCD_Fill_Buffer
    lcd_text.o(i.LCD_Erase) refers to lcd_text.o(.data) for .data
    lcd_text.o(i.LCD_Text_GetGlyphWidth) refers to lcd_text.o(.data) for .data
    lcd_text.o(i.LCD_Text_Init) refers to lucida_12x19.o(.constdata) for Lucida_Console12x19
    lcd_text.o(i.LCD_Text_Init) refers to lcd_text.o(.data) for .data
    lcd_text.o(i.LCD_Text_PrintChar) refers to st7789.o(i.LCD_Start_Rectangle) for LCD_Start_Rectangle
    lcd_text.o(i.LCD_Text_PrintChar) refers to st7789.o(i.LCD_Write_Rectangle_Pixel) for LCD_Write_Rectangle_Pixel
    lcd_text.o(i.LCD_Text_PrintChar) refers to lcd_text.o(.data) for .data
    lcd_text.o(i.LCD_Text_PrintStr) refers to lcd_text.o(i.LCD_Text_PrintChar) for LCD_Text_PrintChar
    lcd_text.o(i.LCD_Text_PrintStr) refers to lcd_text.o(.data) for .data
    lcd_text.o(i.LCD_Text_PrintStr_RC) refers to lcd_text.o(i.LCD_Text_PrintChar) for LCD_Text_PrintChar
    lcd_text.o(i.LCD_Text_PrintStr_RC) refers to lcd_text.o(.data) for .data
    lcd_text.o(i.LCD_Text_Set_Colors) refers to lcd_text.o(.data) for .data
    lcd_text.o(i.LCD_Text_Test) refers to lcd_text.o(i.LCD_Text_PrintChar) for LCD_Text_PrintChar
    lcd_text.o(i.LCD_Text_Test) refers to st7789.o(i.LCD_Refresh) for LCD_Refresh
    lcd_text.o(i.LCD_Text_Test) refers to delay.o(i.Delay) for Delay
    lcd_text.o(i.LCD_Text_Test) refers to st7789.o(i.LCD_Fill_Buffer) for LCD_Fill_Buffer
    lcd_text.o(i.LCD_Text_Test) refers to lcd_text.o(.data) for .data
    lcd_text.o(.data) refers to lucida_12x19.o(.constdata) for Lucida_Console12x19
    st7789.o(i.LCD_Controller_Init) refers to delay.o(i.Delay) for Delay
    st7789.o(i.LCD_Controller_Init) refers to st7789.o(i.LCD_24S_Write_Data) for LCD_24S_Write_Data
    st7789.o(i.LCD_Fill_Buffer) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Fill_Buffer) refers to st7789.o(i.LCD_24S_Write_Data) for LCD_24S_Write_Data
    st7789.o(i.LCD_Fill_Rectangle) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Fill_Rectangle) refers to st7789.o(i.LCD_24S_Write_Data) for LCD_24S_Write_Data
    st7789.o(i.LCD_Init) refers to st7789.o(i.LCD_GPIO_Init) for LCD_GPIO_Init
    st7789.o(i.LCD_Init) refers to touchscreen.o(i.LCD_TS_Init) for LCD_TS_Init
    st7789.o(i.LCD_Init) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    st7789.o(i.LCD_Init) refers to timers.o(i.PWM_Init) for PWM_Init
    st7789.o(i.LCD_Init) refers to delay.o(i.Delay) for Delay
    st7789.o(i.LCD_Init) refers to st7789.o(i.LCD_24S_Write_Data) for LCD_24S_Write_Data
    st7789.o(i.LCD_Init) refers to system_mkl25z4.o(.data) for SystemCoreClock
    st7789.o(i.LCD_Init) refers to st7789.o(.constdata) for .constdata
    st7789.o(i.LCD_Plot_Pixel) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Plot_Pixel) refers to st7789.o(i.LCD_24S_Write_Data) for LCD_24S_Write_Data
    st7789.o(i.LCD_Set_BL) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Set_BL) refers to st7789.o(i.LCD_24S_Write_Data) for LCD_24S_Write_Data
    st7789.o(i.LCD_Set_Backlight_Brightness) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    st7789.o(i.LCD_Set_Backlight_Brightness) refers to timers.o(i.PWM_Set_Value) for PWM_Set_Value
    st7789.o(i.LCD_Set_Backlight_Brightness) refers to system_mkl25z4.o(.data) for SystemCoreClock
    st7789.o(i.LCD_Set_Controller_Brightness) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Set_Controller_Brightness) refers to st7789.o(i.LCD_24S_Write_Data) for LCD_24S_Write_Data
    st7789.o(i.LCD_Start_Rectangle) refers to st7789.o(i.LCD_24S_Write_Command) for LCD_24S_Write_Command
    st7789.o(i.LCD_Start_Rectangle) refers to st7789.o(i.LCD_24S_Write_Data) for LCD_24S_Write_Data
    st7789.o(i.LCD_Write_Rectangle_Pixel) refers to st7789.o(i.LCD_24S_Write_Data) for LCD_24S_Write_Data
    touchscreen.o(i.LCD_TS_Blocking_Read) refers to touchscreen.o(i.LCD_TS_Read) for LCD_TS_Read
    touchscreen.o(i.LCD_TS_Calibrate) refers to lcd_text.o(i.LCD_Text_PrintStr) for LCD_Text_PrintStr
    touchscreen.o(i.LCD_TS_Calibrate) refers to touchscreen.o(i.LCD_TS_Read) for LCD_TS_Read
    touchscreen.o(i.LCD_TS_Calibrate) refers to lcd_text.o(i.LCD_Erase) for LCD_Erase
    touchscreen.o(i.LCD_TS_Calibrate) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    touchscreen.o(i.LCD_TS_Calibrate) refers to lcd_text.o(.data) for G_LCD_char_height
    touchscreen.o(i.LCD_TS_Calibrate) refers to touchscreen.o(.data) for .data
    touchscreen.o(i.LCD_TS_Read) refers to rtx_delay.o(.text.osDelay) for osDelay
    touchscreen.o(i.LCD_TS_Read) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    touchscreen.o(i.LCD_TS_Read) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    touchscreen.o(i.LCD_TS_Read) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    touchscreen.o(i.LCD_TS_Read) refers to touchscreen.o(.data) for .data
    touchscreen.o(i.LCD_TS_Read) refers to threads.o(.data) for requests_q
    profile.o(i.Disable_Profiling) refers to profile.o(.data) for .data
    profile.o(i.Enable_Profiling) refers to profile.o(.data) for .data
    profile.o(i.Init_Profiling) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    profile.o(i.Init_Profiling) refers to timers.o(i.PIT_Init) for PIT_Init
    profile.o(i.Init_Profiling) refers to timers.o(i.PIT_Start) for PIT_Start
    profile.o(i.Init_Profiling) refers to region.o(.constdata) for NumProfileRegions
    profile.o(i.Init_Profiling) refers to region.o(.data) for RegionCount
    profile.o(i.Init_Profiling) refers to system_mkl25z4.o(.data) for SystemCoreClock
    profile.o(i.Sort_Profile_Regions) refers to region.o(.constdata) for NumProfileRegions
    profile.o(i.Sort_Profile_Regions) refers to region.o(.data) for SortedRegions
    profile.o(i.Sort_Profile_Regions) refers to region.o(.data) for RegionCount
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.data) for .data
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for .bss.os.libspace
    rtx_lib.o(i._mutex_acquire) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(i._mutex_acquire) refers to rtx_lib.o(.data) for .data
    rtx_lib.o(i._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(i._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(i._mutex_initialize) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i._mutex_release) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(i._mutex_release) refers to rtx_lib.o(.data) for .data
    rtx_lib.o(i._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_timer_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_timer_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm0.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_mem
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_timer_thread_attr
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_timer_mq_attr
    startup_mkl25z4.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(RESET) refers to startup_mkl25z4.o(STACK) for __initial_sp
    startup_mkl25z4.o(RESET) refers to startup_mkl25z4.o(.text) for Reset_Handler
    startup_mkl25z4.o(RESET) refers to irq_cm0.o(.text) for SVC_Handler
    startup_mkl25z4.o(RESET) refers to dma.o(i.DMA0_IRQHandler) for DMA0_IRQHandler
    startup_mkl25z4.o(RESET) refers to control.o(i.ADC0_IRQHandler) for ADC0_IRQHandler
    startup_mkl25z4.o(RESET) refers to timers.o(i.TPM0_IRQHandler) for TPM0_IRQHandler
    startup_mkl25z4.o(RESET) refers to timers.o(i.PIT_IRQHandler) for PIT_IRQHandler
    startup_mkl25z4.o(.ARM.__at_0x400) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(.text) refers to system_mkl25z4.o(i.SystemInit) for SystemInit
    startup_mkl25z4.o(.text) refers to __main.o(!!!main) for __main
    startup_mkl25z4.o(.text) refers to startup_mkl25z4.o(HEAP) for Heap_Mem
    startup_mkl25z4.o(.text) refers to startup_mkl25z4.o(STACK) for Stack_Mem
    system_mkl25z4.o(i.SystemCoreClockUpdate) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    system_mkl25z4.o(i.SystemCoreClockUpdate) refers to system_mkl25z4.o(.data) for .data
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm0.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm0.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm0.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to aeabi_sdivfast.o(.text) for __aeabi_uidiv
    os_systick.o(.text.OS_Tick_Setup) refers to system_mkl25z4.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_mkl25z4.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    __2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    __2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    __2snprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    __2snprintf.o(.text) refers to _sputc.o(.text) for _sputc
    __2snprintf.o(.text) refers to _snputc.o(.text) for _snputc
    noretval__2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    noretval__2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    noretval__2snprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    noretval__2snprintf.o(.text) refers to _sputc.o(.text) for _sputc
    noretval__2snprintf.o(.text) refers to _snputc.o(.text) for _snputc
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_str.o(.text) refers (Special) to _printf_char.o(.text) for _printf_cs_common
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_dec.o(.text) refers to rtudiv10.o(.text) for __rt_udiv10
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) refers (Weak) to _printf_char.o(.text) for _printf_string
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    d2f.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflti.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fadd) for _fadd1
    faddsub.o(x$fpl$fsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fsub) refers to faddsub.o(x$fpl$fadd) for _fadd1
    fdiv.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(.text) refers to fdiv.o(.constdata) for .constdata
    fdiv.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixi.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixui.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflti.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    frlef.o(x$fpl$frleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    frlef.o(x$fpl$frleqf) refers to fcmpin.o(.text) for __fpl_fcmp_InfNaN
    sinf.o(i.__softfp_sinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sinf.o(i.__softfp_sinf) refers to sinf.o(i.sinf) for sinf
    sinf.o(i.sinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sinf.o(i.sinf) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    sinf.o(i.sinf) refers to frnd.o(.text) for _frnd
    sinf.o(i.sinf) refers to ffixi.o(.text) for __aeabi_f2iz
    sinf.o(i.sinf) refers to faddsub.o(x$fpl$frsb) for __aeabi_frsub
    sinf.o(i.sinf) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    sinf.o(i.sinf) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    sinf.o(i.sinf) refers to rredf.o(i.__mathlib_rredf2) for __mathlib_rredf2
    sinf.o(i.sinf) refers to fpclassifyf.o(i.__ARM_fpclassifyf) for __ARM_fpclassifyf
    sinf.o(i.sinf) refers to funder.o(i.__mathlib_flt_underflow) for __mathlib_flt_underflow
    sinf.o(i.sinf) refers to _rserrno.o(.text) for __set_errno
    sinf.o(i.sinf) refers to funder.o(i.__mathlib_flt_invalid) for __mathlib_flt_invalid
    sinf.o(i.sinf) refers to funder.o(i.__mathlib_flt_infnan) for __mathlib_flt_infnan
    sinf_x.o(i.____softfp_sinf$lsc) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sinf_x.o(i.____softfp_sinf$lsc) refers to sinf_x.o(i.__sinf$lsc) for __sinf$lsc
    sinf_x.o(i.__sinf$lsc) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sinf_x.o(i.__sinf$lsc) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    sinf_x.o(i.__sinf$lsc) refers to frnd.o(.text) for _frnd
    sinf_x.o(i.__sinf$lsc) refers to ffixi.o(.text) for __aeabi_f2iz
    sinf_x.o(i.__sinf$lsc) refers to faddsub.o(x$fpl$frsb) for __aeabi_frsub
    sinf_x.o(i.__sinf$lsc) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    sinf_x.o(i.__sinf$lsc) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    sinf_x.o(i.__sinf$lsc) refers to rredf.o(i.__mathlib_rredf2) for __mathlib_rredf2
    sinf_x.o(i.__sinf$lsc) refers to _rserrno.o(.text) for __set_errno
    sinf_x.o(i.__sinf$lsc) refers to funder.o(i.__mathlib_flt_infnan) for __mathlib_flt_infnan
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    _rserrno.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_char_common.o(.text) refers to __printf_wp.o(.text) for __printf
    _printf_char.o(.text) refers (Weak) to _printf_str.o(.text) for _printf_str
    fcmpin.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmpin.o(.text) refers to cmpret.o(.text) for __fpl_cmpreturn
    fcmpin.o(.text) refers to fnan2.o(.text) for __fpl_fcheck_NaN2
    frnd.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fpclassifyf.o(i.__ARM_fpclassifyf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    funder.o(i.__mathlib_flt_divzero) refers to fdiv.o(.text) for __aeabi_fdiv
    funder.o(i.__mathlib_flt_infnan) refers to fscalbn.o(.text) for __ARM_scalbnf
    funder.o(i.__mathlib_flt_infnan2) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    funder.o(i.__mathlib_flt_invalid) refers to fdiv.o(.text) for __aeabi_fdiv
    funder.o(i.__mathlib_flt_overflow) refers to fscalbn.o(.text) for __ARM_scalbnf
    funder.o(i.__mathlib_flt_posinfnan) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    funder.o(i.__mathlib_flt_underflow) refers to fscalbn.o(.text) for __ARM_scalbnf
    rredf.o(i.__mathlib_rredf2) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    rredf.o(i.__mathlib_rredf2) refers to rredf.o(i.__ARM_common_ll_muluu) for __ARM_common_ll_muluu
    rredf.o(i.__mathlib_rredf2) refers to fflti.o(.text) for __aeabi_i2f
    rredf.o(i.__mathlib_rredf2) refers to fscalbn.o(.text) for __ARM_scalbnf
    rredf.o(i.__mathlib_rredf2) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    rredf.o(i.__mathlib_rredf2) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    rredf.o(i.__mathlib_rredf2) refers to faddsub.o(x$fpl$frsb) for __aeabi_frsub
    rredf.o(i.__mathlib_rredf2) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    rredf.o(i.__mathlib_rredf2) refers to rredf.o(.constdata) for .constdata
    rredf.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(i._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    rt_errno_addr.o(.text) refers to rt_errno_addr.o(.bss) for __aeabi_errno_addr_data
    rt_errno_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_errno_addr_twolibspace.o(.text) refers to rtx_lib.o(i.__user_perthread_libspace) for __user_perthread_libspace
    cmpret.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnan2.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnan2.o(.text) refers to retnan.o(.text) for __fpl_return_NaN
    fscalbn.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_mkl25z4.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    retnan.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    retnan.o(.text) refers to cmpret.o(.text) for __fpl_cmpreturn
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    rredf.o(i.__ARM_common_ll_muluu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp


==============================================================================

Removing Unused input sections from the image.

    Removing control.o(.rev16_text), (4 bytes).
    Removing control.o(.revsh_text), (4 bytes).
    Removing control.o(i.Init_DAC_HBLED), (68 bytes).
    Removing control.o(i.Set_DAC), (12 bytes).
    Removing control.o(i.Set_DAC_mA), (32 bytes).
    Removing control.o(i.UpdatePID), (102 bytes).
    Removing control.o(i.UpdatePID_FX), (94 bytes).
    Removing control.o(.data), (4 bytes).
    Removing debug.o(.rev16_text), (4 bytes).
    Removing debug.o(.revsh_text), (4 bytes).
    Removing delay.o(.rev16_text), (4 bytes).
    Removing delay.o(.revsh_text), (4 bytes).
    Removing delay.o(i.ShortDelay), (16 bytes).
    Removing dma.o(.rev16_text), (4 bytes).
    Removing dma.o(.revsh_text), (4 bytes).
    Removing dma.o(i.Configure_DMA_For_Playback), (92 bytes).
    Removing dma.o(i.DMA_Init), (32 bytes).
    Removing dma.o(i.Start_DMA_Playback), (80 bytes).
    Removing fx.o(i.Test_FX), (2 bytes).
    Removing leds.o(.rev16_text), (4 bytes).
    Removing leds.o(.revsh_text), (4 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing sound.o(.rev16_text), (4 bytes).
    Removing sound.o(.revsh_text), (4 bytes).
    Removing sound.o(i.DAC_Init), (60 bytes).
    Removing sound.o(i.Init_Voices), (88 bytes).
    Removing sound.o(i.Init_Waveform), (40 bytes).
    Removing sound.o(i.Play_Sound_Sample), (16 bytes).
    Removing sound.o(i.Play_Tone), (148 bytes).
    Removing sound.o(i.Play_Waveform_with_DMA), (28 bytes).
    Removing sound.o(i.SineTable_Init), (104 bytes).
    Removing sound.o(i.Sound_Enable_Amp), (16 bytes).
    Removing sound.o(i.Sound_Generate_Next_Sample), (124 bytes).
    Removing sound.o(i.Sound_Init), (352 bytes).
    Removing sound.o(i.Thread_Refill_Sound_Buffer), (284 bytes).
    Removing sound.o(i.Thread_Sound_Manager), (168 bytes).
    Removing sound.o(.bss), (2336 bytes).
    Removing sound.o(.constdata), (96 bytes).
    Removing sound.o(.data), (1 bytes).
    Removing threads.o(.rev16_text), (4 bytes).
    Removing threads.o(.revsh_text), (4 bytes).
    Removing threads.o(.data), (4 bytes).
    Removing timers.o(.rev16_text), (4 bytes).
    Removing timers.o(.revsh_text), (4 bytes).
    Removing timers.o(i.Configure_TPM0_for_DMA), (24 bytes).
    Removing timers.o(i.PIT_Init), (100 bytes).
    Removing timers.o(i.PIT_Start), (16 bytes).
    Removing timers.o(i.PIT_Stop), (16 bytes).
    Removing timers.o(i.TPM0_Init), (32 bytes).
    Removing timers.o(.data), (4 bytes).
    Removing timers.o(.data), (4 bytes).
    Removing ui.o(.rev16_text), (4 bytes).
    Removing ui.o(.revsh_text), (4 bytes).
    Removing ui.o(i.Clear_Graph), (44 bytes).
    Removing ui.o(i.Plot_Graph), (132 bytes).
    Removing ui.o(i.UI_Draw_Fields), (92 bytes).
    Removing ui.o(i.UI_Draw_Slider), (92 bytes).
    Removing ui.o(i.UI_Update_Field_Selects), (172 bytes).
    Removing ui.o(i.UI_Update_Volatile_Field_Values), (72 bytes).
    Removing lcd_graphics.o(i.Graphics_Test), (384 bytes).
    Removing lcd_graphics.o(i.LCD_Draw_Circle), (232 bytes).
    Removing lcd_graphics.o(i.LCD_Draw_Line), (564 bytes).
    Removing lcd_text.o(i.Bit_Reverse_Byte), (26 bytes).
    Removing lcd_text.o(i.LCD_Text_GetGlyphWidth), (24 bytes).
    Removing lcd_text.o(i.LCD_Text_PrintStr), (76 bytes).
    Removing lcd_text.o(i.LCD_Text_Test), (256 bytes).
    Removing lcd_text.o(.constdata), (3 bytes).
    Removing lcd_text.o(.constdata), (3 bytes).
    Removing lcd_text.o(.data), (12 bytes).
    Removing lucida_8x13.o(.constdata), (1640 bytes).
    Removing lucida_20x31.o(.constdata), (8762 bytes).
    Removing st7789.o(.rev16_text), (4 bytes).
    Removing st7789.o(.revsh_text), (4 bytes).
    Removing st7789.o(i.LCD_Controller_Init), (116 bytes).
    Removing st7789.o(i.LCD_Refresh), (2 bytes).
    Removing st7789.o(i.LCD_Set_BL), (28 bytes).
    Removing st7789.o(i.LCD_Set_Backlight_Brightness), (56 bytes).
    Removing st7789.o(i.LCD_Set_Controller_Brightness), (18 bytes).
    Removing st7789.o(.constdata), (126 bytes).
    Removing t6963.o(.rev16_text), (4 bytes).
    Removing t6963.o(.revsh_text), (4 bytes).
    Removing touchscreen.o(.rev16_text), (4 bytes).
    Removing touchscreen.o(.revsh_text), (4 bytes).
    Removing touchscreen.o(i.Init_ADC), (32 bytes).
    Removing touchscreen.o(i.LCD_TS_Blocking_Read), (48 bytes).
    Removing touchscreen.o(i.LCD_TS_Calibrate), (292 bytes).
    Removing colors.o(.data), (3 bytes).
    Removing colors.o(.data), (3 bytes).
    Removing colors.o(.data), (3 bytes).
    Removing colors.o(.data), (3 bytes).
    Removing profile.o(.rev16_text), (4 bytes).
    Removing profile.o(.revsh_text), (4 bytes).
    Removing profile.o(i.Disable_Profiling), (12 bytes).
    Removing profile.o(i.Enable_Profiling), (12 bytes).
    Removing profile.o(i.Init_Profiling), (88 bytes).
    Removing profile.o(i.Print_Sorted_Profile), (2 bytes).
    Removing profile.o(i.Sort_Profile_Regions), (168 bytes).
    Removing region.o(.data), (4 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.emb_text), (0 bytes).
    Removing rtx_lib.o(.rodata), (56 bytes).
    Removing rtx_lib.o(i.__user_perthread_libspace), (100 bytes).
    Removing rtx_lib.o(.bss.os.libspace), (496 bytes).
    Removing rtx_lib.o(.data), (4 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing system_mkl25z4.o(.rev16_text), (4 bytes).
    Removing system_mkl25z4.o(.revsh_text), (4 bytes).
    Removing system_mkl25z4.o(i.SystemCoreClockUpdate), (292 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (56 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (80 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (136 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (136 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (192 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (96 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (40 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (32 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (18 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (24 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (176 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (116 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing irq_cm0.o(.constdata), (1 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (132 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (18 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (44 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (26 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (456 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (74 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (116 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (40 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).

417 unused section(s) (total 26220 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_mkl25z4.o(RESET)
    ../clib/../cmprslib/zerorunl2.c          0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.c                       0x00000000   Number         0  rtudiv10.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/fenv.c                           0x00000000   Number         0  _rserrno.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/longlong.c                       0x00000000   Number         0  llmul.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/misc.s                           0x00000000   Number         0  printf_stubs.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _snputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_pad.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _sputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_str.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2snprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2snprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_s.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/cfplib/cmpret.c                 0x00000000   Number         0  cmpret.o ABSOLUTE
    ../fplib/cfplib/d2f.c                    0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/cfplib/dmul.c                   0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/cfplib/fcmpin.c                 0x00000000   Number         0  fcmpin.o ABSOLUTE
    ../fplib/cfplib/fdiv.c                   0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  ffixi.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  ffixui.o ABSOLUTE
    ../fplib/cfplib/fflt.c                   0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/cfplib/fflt.c                   0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/cfplib/frnd.c                   0x00000000   Number         0  frnd.o ABSOLUTE
    ../fplib/cfplib/nan2.c                   0x00000000   Number         0  fnan2.o ABSOLUTE
    ../fplib/cfplib/retnan.c                 0x00000000   Number         0  retnan.o ABSOLUTE
    ../fplib/cfplib/scalbn.c                 0x00000000   Number         0  fscalbn.o ABSOLUTE
    ../fplib/faddsub6m.s                     0x00000000   Number         0  faddsub.o ABSOLUTE
    ../fplib/fmul6m.s                        0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/frleqf6m.s                      0x00000000   Number         0  frlef.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ../mathlib/fpclassifyf.c                 0x00000000   Number         0  fpclassifyf.o ABSOLUTE
    ../mathlib/funder.c                      0x00000000   Number         0  funder.o ABSOLUTE
    ../mathlib/rredf.c                       0x00000000   Number         0  rredf.o ABSOLUTE
    ../mathlib/sinf.c                        0x00000000   Number         0  sinf.o ABSOLUTE
    ../mathlib/sinf.c                        0x00000000   Number         0  sinf_x.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm0.s            0x00000000   Number         0  irq_cm0.o ABSOLUTE
    C:\Users\rambala\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Users\\rambala\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.5.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\MKL25Z128xxx4\startup_MKL25Z4.s 0x00000000   Number         0  startup_mkl25z4.o ABSOLUTE
    RTE\Device\MKL25Z128xxx4\system_MKL25Z4.c 0x00000000   Number         0  system_mkl25z4.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\MKL25Z128xxx4\\system_MKL25Z4.c 0x00000000   Number         0  system_mkl25z4.o ABSOLUTE
    Source\DMA.c                             0x00000000   Number         0  dma.o ABSOLUTE
    Source\FX.c                              0x00000000   Number         0  fx.o ABSOLUTE
    Source\LCD\LCD_graphics.c                0x00000000   Number         0  lcd_graphics.o ABSOLUTE
    Source\LCD\LCD_text.c                    0x00000000   Number         0  lcd_text.o ABSOLUTE
    Source\LCD\ST7789.c                      0x00000000   Number         0  st7789.o ABSOLUTE
    Source\LCD\T6963.c                       0x00000000   Number         0  t6963.o ABSOLUTE
    Source\LCD\colors.c                      0x00000000   Number         0  colors.o ABSOLUTE
    Source\LCD\lucida_12x19.c                0x00000000   Number         0  lucida_12x19.o ABSOLUTE
    Source\LCD\lucida_20x31.c                0x00000000   Number         0  lucida_20x31.o ABSOLUTE
    Source\LCD\lucida_8x13.c                 0x00000000   Number         0  lucida_8x13.o ABSOLUTE
    Source\LCD\touchscreen.c                 0x00000000   Number         0  touchscreen.o ABSOLUTE
    Source\LEDs.c                            0x00000000   Number         0  leds.o ABSOLUTE
    Source\Profiler\profile.c                0x00000000   Number         0  profile.o ABSOLUTE
    Source\Profiler\region.c                 0x00000000   Number         0  region.o ABSOLUTE
    Source\UI.c                              0x00000000   Number         0  ui.o ABSOLUTE
    Source\\DMA.c                            0x00000000   Number         0  dma.o ABSOLUTE
    Source\\LCD\\ST7789.c                    0x00000000   Number         0  st7789.o ABSOLUTE
    Source\\LCD\\T6963.c                     0x00000000   Number         0  t6963.o ABSOLUTE
    Source\\LCD\\touchscreen.c               0x00000000   Number         0  touchscreen.o ABSOLUTE
    Source\\LEDs.c                           0x00000000   Number         0  leds.o ABSOLUTE
    Source\\Profiler\\profile.c              0x00000000   Number         0  profile.o ABSOLUTE
    Source\\UI.c                             0x00000000   Number         0  ui.o ABSOLUTE
    Source\\control.c                        0x00000000   Number         0  control.o ABSOLUTE
    Source\\debug.c                          0x00000000   Number         0  debug.o ABSOLUTE
    Source\\delay.c                          0x00000000   Number         0  delay.o ABSOLUTE
    Source\\main.c                           0x00000000   Number         0  main.o ABSOLUTE
    Source\\sound.c                          0x00000000   Number         0  sound.o ABSOLUTE
    Source\\threads.c                        0x00000000   Number         0  threads.o ABSOLUTE
    Source\\timers.c                         0x00000000   Number         0  timers.o ABSOLUTE
    Source\control.c                         0x00000000   Number         0  control.o ABSOLUTE
    Source\debug.c                           0x00000000   Number         0  debug.o ABSOLUTE
    Source\delay.c                           0x00000000   Number         0  delay.o ABSOLUTE
    Source\main.c                            0x00000000   Number         0  main.o ABSOLUTE
    Source\sound.c                           0x00000000   Number         0  sound.o ABSOLUTE
    Source\threads.c                         0x00000000   Number         0  threads.o ABSOLUTE
    Source\timers.c                          0x00000000   Number         0  timers.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    !!!main                                  0x000000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x000000c8   Section       60  __scatter.o(!!!scatter)
    !!handler_zi                             0x00000104   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x00000120   Section        2  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000009  0x00000122   Section       10  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    .ARM.Collect$$_printf_percent$$00000014  0x0000012c   Section       10  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    .ARM.Collect$$_printf_percent$$00000017  0x00000136   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x0000013a   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0000013c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x0000013c   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x0000013e   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x00000140   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x00000140   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x00000140   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x00000140   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x00000140   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x00000140   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x00000140   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x00000142   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x00000142   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x00000142   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x00000148   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x00000150   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000154   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000154   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0000015c   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0000015e   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0000015e   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000162   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x00000168   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x000001a0   Section       64  startup_mkl25z4.o(.text)
    .text                                    0x000001e0   Section      164  irq_cm0.o(.text)
    .text                                    0x00000284   Section        0  llmul.o(.text)
    .text                                    0x000002b4   Section        0  noretval__2sprintf.o(.text)
    .text                                    0x000002dc   Section        0  noretval__2snprintf.o(.text)
    .text                                    0x00000314   Section        0  _printf_pad.o(.text)
    .text                                    0x00000362   Section        0  _printf_str.o(.text)
    .text                                    0x000003b4   Section        0  strlen.o(.text)
    .text                                    0x000003f8   Section        0  heapauxi.o(.text)
    .text                                    0x000003fe   Section        2  use_no_semi.o(.text)
    .ARM.__at_0x400                          0x00000400   Section       16  startup_mkl25z4.o(.ARM.__at_0x400)
    .text                                    0x00000410   Section        0  _printf_dec.o(.text)
    .text                                    0x0000047c   Section        0  __printf_wp.o(.text)
    .text                                    0x0000058a   Section        0  rt_memcpy.o(.text)
    .text                                    0x0000060c   Section        0  rt_memclr.o(.text)
    .text                                    0x0000064c   Section      488  aeabi_sdivfast.o(.text)
    .text                                    0x00000834   Section        0  ffixi.o(.text)
    .text                                    0x00000880   Section        0  ffixui.o(.text)
    .text                                    0x000008b0   Section        0  fflti.o(.text)
    .text                                    0x0000090e   Section        0  _printf_intcommon.o(.text)
    .text                                    0x000009c0   Section        0  _printf_char_common.o(.text)
    _printf_input_char                       0x000009c1   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x000009f0   Section        0  _sputc.o(.text)
    .text                                    0x000009fa   Section        0  _snputc.o(.text)
    .text                                    0x00000a0a   Section        0  _printf_char.o(.text)
    .text                                    0x00000a38   Section        0  rtudiv10.o(.text)
    .text                                    0x00000a60   Section        0  fcmpin.o(.text)
    .text                                    0x00000ac4   Section        0  cmpret.o(.text)
    .text                                    0x00000af4   Section        0  fnan2.o(.text)
    .text                                    0x00000b04   Section        8  libspace.o(.text)
    .text                                    0x00000b0c   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x00000b4a   Section        0  exit.o(.text)
    .text                                    0x00000b5a   Section        0  retnan.o(.text)
    .text                                    0x00000bb8   Section        0  sys_exit.o(.text)
    .text                                    0x00000bc4   Section        0  __dczerorl2.o(.text)
    .text                                    0x00000bc4   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x00000c1a   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueueGet                          0x00000c1b   Thumb Code    76  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x00000c66   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueuePut                          0x00000c67   Thumb Code   100  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x00000cca   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    MessageQueueRemove                       0x00000ccb   Thumb Code    30  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x00000ce8   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    __arm_cp.3_0                             0x00000cf0   Number         4  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x00000cf4   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_0                             0x00000d14   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x00000d18   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_2                             0x00000d1c   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x00000d20   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x00000d28   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x00000d64   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x00000d68   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x00000d6c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x00000d70   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x00000d74   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsCheck                         0x00000d75   Thumb Code    82  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x00000dc8   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerInsert                              0x00000dc9   Thumb Code    76  rtx_timer.o(.text.TimerInsert)
    __arm_cp.8_0                             0x00000e10   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x00000e14   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x00000e38   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x00000e3c   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_0                             0x00000e64   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_1                             0x00000e68   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x00000e6c   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.1_0                             0x00000e90   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x00000e94   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.6_0                             0x00000eb4   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x00000eb8   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.3_0                             0x00000f28   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x00000f2c   Section        0  rtx_msgqueue.o(.text.osMessageQueueGetCount)
    __arm_cp.8_0                             0x00000f58   Number         4  rtx_msgqueue.o(.text.osMessageQueueGetCount)
    [Anonymous Symbol]                       0x00000f5c   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.0_0                             0x00000f7c   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x00000f80   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.2_0                             0x00000ffc   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x00001000   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.3_0                             0x00001024   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x00001028   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.6_0                             0x0000104c   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x00001050   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.1_0                             0x00001070   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x00001074   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.4_0                             0x00001098   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x0000109c   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x0000109e   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x00001116   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x00001164   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x0000119e   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x000011ca   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x00001206   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x0000124a   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMessageQueuePostProcess             0x0000124b   Thumb Code   192  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x0000130a   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x00001348   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x000013c4   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x000013c8   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_0                             0x0000142c   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x00001430   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x00001434   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadBlock                         0x00001435   Thumb Code    56  rtx_thread.o(.text.osRtxThreadBlock)
    __arm_cp.10_0                            0x00001468   Number         4  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x0000146c   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayInsert                   0x0000146d   Thumb Code   124  rtx_thread.o(.text.osRtxThreadDelayInsert)
    __arm_cp.14_0                            0x000014e4   Number         4  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x000014e8   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayRemove                   0x000014e9   Thumb Code    76  rtx_thread.o(.text.osRtxThreadDelayRemove)
    __arm_cp.12_0                            0x00001530   Number         4  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x00001534   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.5_0                             0x00001568   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x0000156c   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.9_0                             0x000015b8   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x000015bc   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadFree                          0x000015bd   Thumb Code    80  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.52_0                            0x00001608   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x0000160c   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x00001620   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x0000164c   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x00001664   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x0000168a   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadPostProcess                   0x0000168b   Thumb Code    38  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x000016b0   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x000016c4   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x000016c8   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x000016d0   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_0                             0x000016f4   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_1                             0x000016f8   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x000016fc   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_0                            0x00001730   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_1                            0x00001734   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_2                            0x00001738   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_3                            0x0000173c   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x00001740   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.7_0                             0x00001750   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x00001754   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.13_0                            0x0000178c   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x00001790   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x000017b4   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x00001824   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x00001828   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_0                             0x00001858   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_1                             0x0000185c   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_2                             0x00001860   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    [Anonymous Symbol]                       0x00001864   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    osRtxTimerTick                           0x00001865   Thumb Code    96  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x000018c0   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x000018c4   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.31_0                            0x000018cc   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x000018d0   Section        0  rtx_thread.o(.text.osThreadFlagsSet)
    __arm_cp.35_0                            0x00001924   Number         4  rtx_thread.o(.text.osThreadFlagsSet)
    [Anonymous Symbol]                       0x00001928   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.17_0                            0x00001948   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x0000194c   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxDelay                              0x0000194d   Thumb Code    18  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x00001960   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetState                     0x00001961   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.5_0                             0x00001968   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x0000196c   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelInitialize                   0x0000196d   Thumb Code   324  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_0                            0x00001aa4   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_1                            0x00001aa8   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_2                            0x00001aac   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x00001ab0   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxKernelStart                        0x00001ab1   Thumb Code   132  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_0                            0x00001b24   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_1                            0x00001b28   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_2                            0x00001b2c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_3                            0x00001b30   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x00001b34   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGet                    0x00001b35   Thumb Code   236  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.21_0                            0x00001c1c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x00001c20   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount)
    svcRtxMessageQueueGetCount               0x00001c21   Thumb Code    18  rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount)
    [Anonymous Symbol]                       0x00001c34   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueueNew                    0x00001c35   Thumb Code   460  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_0                            0x00001de8   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_1                            0x00001dec   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_2                            0x00001df0   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_3                            0x00001df4   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_4                            0x00001df8   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_5                            0x00001dfc   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x00001e00   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMessageQueuePut                    0x00001e01   Thumb Code   212  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.19_0                            0x00001ed0   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x00001ed4   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexAcquire                       0x00001ed5   Thumb Code   160  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.9_0                             0x00001f70   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x00001f74   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexDelete                        0x00001f75   Thumb Code   192  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.12_0                            0x00002030   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x00002034   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexNew                           0x00002035   Thumb Code   116  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.7_0                             0x000020a4   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x000020a8   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxMutexRelease                       0x000020a9   Thumb Code   188  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.10_0                            0x00002160   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x00002164   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadExit                         0x00002165   Thumb Code   116  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.54_0                            0x000021d4   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x000021d8   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    svcRtxThreadFlagsSet                     0x000021d9   Thumb Code   106  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x00002244   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadNew                          0x00002245   Thumb Code   512  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_0                            0x0000242c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_1                            0x00002430   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_2                            0x00002434   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_3                            0x00002438   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_4                            0x0000243c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_5                            0x00002440   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    i.ADC0_IRQHandler                        0x00002444   Section        0  control.o(i.ADC0_IRQHandler)
    i.Add_FX                                 0x00002518   Section        0  fx.o(i.Add_FX)
    i.Control_DutyCycle_Handler              0x0000251c   Section        0  control.o(i.Control_DutyCycle_Handler)
    i.Control_HBLED                          0x00002560   Section        0  control.o(i.Control_HBLED)
    i.Control_IntNonNegative_Handler         0x0000275c   Section        0  control.o(i.Control_IntNonNegative_Handler)
    i.Control_OnOff_Handler                  0x00002778   Section        0  control.o(i.Control_OnOff_Handler)
    i.Control_RGB_LEDs                       0x0000278c   Section        0  leds.o(i.Control_RGB_LEDs)
    i.Create_OS_Objects                      0x000027c8   Section        0  threads.o(i.Create_OS_Objects)
    i.DMA0_IRQHandler                        0x00002834   Section        0  dma.o(i.DMA0_IRQHandler)
    i.Delay                                  0x000028b8   Section        0  delay.o(i.Delay)
    i.Init_ADC_HBLED                         0x000028d0   Section        0  control.o(i.Init_ADC_HBLED)
    i.Init_Buck_HBLED                        0x00002934   Section        0  control.o(i.Init_Buck_HBLED)
    i.Init_Debug_Signals                     0x000029bc   Section        0  debug.o(i.Init_Debug_Signals)
    i.Init_RGB_LEDs                          0x00002a74   Section        0  leds.o(i.Init_RGB_LEDs)
    i.LCD_24S_Write_Command                  0x00002adc   Section        0  st7789.o(i.LCD_24S_Write_Command)
    LCD_24S_Write_Command                    0x00002add   Thumb Code    36  st7789.o(i.LCD_24S_Write_Command)
    i.LCD_24S_Write_Data                     0x00002b04   Section        0  st7789.o(i.LCD_24S_Write_Data)
    LCD_24S_Write_Data                       0x00002b05   Thumb Code    36  st7789.o(i.LCD_24S_Write_Data)
    i.LCD_Erase                              0x00002b2c   Section        0  lcd_text.o(i.LCD_Erase)
    i.LCD_Fill_Buffer                        0x00002b3c   Section        0  st7789.o(i.LCD_Fill_Buffer)
    i.LCD_Fill_Rectangle                     0x00002bbe   Section        0  st7789.o(i.LCD_Fill_Rectangle)
    i.LCD_GPIO_Init                          0x00002c88   Section        0  st7789.o(i.LCD_GPIO_Init)
    i.LCD_Init                               0x00002dc4   Section        0  st7789.o(i.LCD_Init)
    i.LCD_Plot_Pixel                         0x00002e90   Section        0  st7789.o(i.LCD_Plot_Pixel)
    i.LCD_Start_Rectangle                    0x00002f02   Section        0  st7789.o(i.LCD_Start_Rectangle)
    i.LCD_TS_Init                            0x00002f98   Section        0  touchscreen.o(i.LCD_TS_Init)
    i.LCD_TS_Read                            0x00002fb8   Section        0  touchscreen.o(i.LCD_TS_Read)
    i.LCD_Text_Init                          0x000031b4   Section        0  lcd_text.o(i.LCD_Text_Init)
    i.LCD_Text_PrintChar                     0x000031f0   Section        0  lcd_text.o(i.LCD_Text_PrintChar)
    i.LCD_Text_PrintStr_RC                   0x00003398   Section        0  lcd_text.o(i.LCD_Text_PrintStr_RC)
    i.LCD_Text_Set_Colors                    0x000033f0   Section        0  lcd_text.o(i.LCD_Text_Set_Colors)
    i.LCD_Write_Rectangle_Pixel              0x00003418   Section        0  st7789.o(i.LCD_Write_Rectangle_Pixel)
    i.Multiply_FX                            0x0000344a   Section        0  fx.o(i.Multiply_FX)
    i.PIT_IRQHandler                         0x00003460   Section        0  timers.o(i.PIT_IRQHandler)
    i.PWM_Init                               0x00003508   Section        0  timers.o(i.PWM_Init)
    i.PWM_Set_Value                          0x00003594   Section        0  timers.o(i.PWM_Set_Value)
    i.Sound_Disable_Amp                      0x0000359c   Section        0  sound.o(i.Sound_Disable_Amp)
    i.Subtract_FX                            0x000035ac   Section        0  fx.o(i.Subtract_FX)
    i.SystemInit                             0x000035b0   Section        0  system_mkl25z4.o(i.SystemInit)
    i.TPM0_IRQHandler                        0x00003698   Section        0  timers.o(i.TPM0_IRQHandler)
    i.TPM0_Start                             0x000036d4   Section        0  timers.o(i.TPM0_Start)
    i.Thread_Buck_Update_Setpoint            0x000036e4   Section        0  threads.o(i.Thread_Buck_Update_Setpoint)
    i.Thread_Read_TS                         0x000036f0   Section        0  threads.o(i.Thread_Read_TS)
    i.Thread_Update_Screen                   0x00003718   Section        0  threads.o(i.Thread_Update_Screen)
    i.UI_Draw_Screen                         0x0000373c   Section        0  ui.o(i.UI_Draw_Screen)
    i.UI_Identify_Field                      0x00003954   Section        0  ui.o(i.UI_Identify_Field)
    i.UI_Process_Touch                       0x000039f0   Section        0  ui.o(i.UI_Process_Touch)
    i.UI_Update_Field_Values                 0x00003b04   Section        0  ui.o(i.UI_Update_Field_Values)
    i.Update_Set_Current                     0x00003b54   Section        0  control.o(i.Update_Set_Current)
    i._is_digit                              0x00003bc0   Section        0  __printf_wp.o(i._is_digit)
    i._mutex_acquire                         0x00003bd0   Section        0  rtx_lib.o(i._mutex_acquire)
    __tagsym$$used                           0x00003bd1   Number         0  rtx_lib.o(i._mutex_acquire)
    i._mutex_free                            0x00003c00   Section        0  rtx_lib.o(i._mutex_free)
    __tagsym$$used                           0x00003c01   Number         0  rtx_lib.o(i._mutex_free)
    i._mutex_initialize                      0x00003c0a   Section        0  rtx_lib.o(i._mutex_initialize)
    __tagsym$$used                           0x00003c0b   Number         0  rtx_lib.o(i._mutex_initialize)
    i._mutex_release                         0x00003c2c   Section        0  rtx_lib.o(i._mutex_release)
    __tagsym$$used                           0x00003c2d   Number         0  rtx_lib.o(i._mutex_release)
    i._platform_post_stackheap_init          0x00003c58   Section        0  rtx_lib.o(i._platform_post_stackheap_init)
    i.main                                   0x00003c60   Section        0  main.o(i.main)
    i.osRtxErrorNotify                       0x00003cc0   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x00003cc4   Section        0  rtx_config.o(i.osRtxIdleThread)
    x$fpl$fadd                               0x00003cd4   Section      140  faddsub.o(x$fpl$fadd)
    _fadd1                                   0x00003ce1   Thumb Code     0  faddsub.o(x$fpl$fadd)
    x$fpl$fmul                               0x00003d60   Section      176  fmul.o(x$fpl$fmul)
    x$fpl$frleqf                             0x00003e10   Section       88  frlef.o(x$fpl$frleqf)
    x$fpl$fsub                               0x00003e68   Section      208  faddsub.o(x$fpl$fsub)
    _fsub1                                   0x00003e75   Thumb Code     0  faddsub.o(x$fpl$fsub)
    .constdata                               0x00003f38   Section      124  threads.o(.constdata)
    x$fpl$usenofp                            0x00003f38   Section        0  usenofp.o(x$fpl$usenofp)
    .constdata                               0x00003fb4   Section       16  ui.o(.constdata)
    .constdata                               0x00003fc4   Section     3831  lucida_12x19.o(.constdata)
    .constdata                               0x00004ebb   Section      142  st7789.o(.constdata)
    .constdata                               0x00004f4c   Section       32  region.o(.constdata)
    .constdata                               0x00004f6c   Section        4  region.o(.constdata)
    .constdata                               0x00004f70   Section       36  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x00004f70   Data          36  rtx_lib.o(.constdata)
    .constdata                               0x00004f94   Section       36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x00004f94   Data          36  rtx_lib.o(.constdata)
    .constdata                               0x00004fb8   Section       24  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x00004fb8   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x00004fd0   Section        4  rtx_lib.o(.constdata)
    .conststring                             0x00004fd4   Section       10  threads.o(.conststring)
    .rodata                                  0x00004fe0   Section      104  rtx_lib.o(.rodata)
    __tagsym$$used                           0x00004fe0   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x00005048   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x00005048   Data          11  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x1ffff000   Section     4096  rtx_lib.o(.bss.os)
    os_mem                                   0x1ffff000   Data        4096  rtx_lib.o(.bss.os)
    .bss.os                                  0x20000000   Section       64  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20000000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x20000040   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20000040   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20000074   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20000074   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200000c4   Section       68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x200000c4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb                        0x20000108   Section       68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20000108   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x20000150   Section      256  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20000150   Data         256  rtx_lib.o(.bss.os.thread.stack)
    .bss.os.thread.stack                     0x20000250   Section      256  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20000250   Data         256  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x20000350   Section      120  control.o(.data)
    conversion_type                          0x2000036c   Data           4  control.o(.data)
    req_size                                 0x20000370   Data           4  control.o(.data)
    state                                    0x20000374   Data           4  control.o(.data)
    adc_val                                  0x20000384   Data           4  control.o(.data)
    delay                                    0x20000388   Data           4  control.o(.data)
    .data                                    0x200003c8   Section       20  dma.o(.data)
    .data                                    0x200003dc   Section        1  main.o(.data)
    .data                                    0x200003e0   Section       24  threads.o(.data)
    .data                                    0x200003f8   Section        4  threads.o(.data)
    .data                                    0x200003fc   Section        8  timers.o(.data)
    control_divider                          0x20000400   Data           4  timers.o(.data)
    .data                                    0x20000404   Section      732  ui.o(.data)
    initialized                              0x20000408   Data           4  ui.o(.data)
    counter                                  0x2000040c   Data           4  ui.o(.data)
    .data                                    0x200006e0   Section       20  lcd_text.o(.data)
    .data                                    0x200006f4   Section       48  touchscreen.o(.data)
    xl                                       0x200006f6   Data           2  touchscreen.o(.data)
    yu                                       0x200006f8   Data           2  touchscreen.o(.data)
    msg1                                     0x2000070c   Data           4  touchscreen.o(.data)
    msg2                                     0x20000710   Data           4  touchscreen.o(.data)
    .data                                    0x20000724   Section        3  colors.o(.data)
    .data                                    0x20000727   Section        3  colors.o(.data)
    .data                                    0x2000072a   Section        3  colors.o(.data)
    .data                                    0x2000072d   Section        3  colors.o(.data)
    .data                                    0x20000730   Section        3  colors.o(.data)
    .data                                    0x20000733   Section        3  colors.o(.data)
    .data                                    0x20000736   Section        3  colors.o(.data)
    .data                                    0x20000739   Section        3  colors.o(.data)
    .data                                    0x2000073c   Section        3  colors.o(.data)
    .data                                    0x2000073f   Section        3  colors.o(.data)
    .data                                    0x20000742   Section        3  colors.o(.data)
    .data                                    0x20000745   Section        3  colors.o(.data)
    .data                                    0x20000748   Section        3  colors.o(.data)
    .data                                    0x2000074c   Section        4  profile.o(.data)
    .data                                    0x20000750   Section        4  profile.o(.data)
    .data                                    0x20000754   Section        4  profile.o(.data)
    .data                                    0x20000758   Section        1  profile.o(.data)
    .data                                    0x2000075c   Section        4  region.o(.data)
    .data                                    0x20000760   Section        1  rtx_lib.o(.data)
    os_kernel_active                         0x20000760   Data           1  rtx_lib.o(.data)
    .data                                    0x20000764   Section        4  system_mkl25z4.o(.data)
    .bss                                     0x2000080c   Section     7680  control.o(.bss)
    .bss                                     0x2000260c   Section       96  libspace.o(.bss)
    [Anonymous Symbol]                       0x2000266c   Section        0  os_systick.o(.bss.PendST)
    PendST                                   0x2000266c   Data           1  os_systick.o(.bss.PendST)
    HEAP                                     0x20002670   Section        0  startup_mkl25z4.o(HEAP)
    STACK                                    0x20002670   Section      768  startup_mkl25z4.o(STACK)
    Heap_Mem                                 0x20002670   Data           0  startup_mkl25z4.o(HEAP)
    Stack_Mem                                0x20002670   Data         768  startup_mkl25z4.o(STACK)
    __initial_sp                             0x20002970   Data           0  startup_mkl25z4.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEX$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_mkl25z4.o(RESET)
    _printf_flags                            0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printf_stubs.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _printf_mbtowc                            - Undefined Weak Reference
    _printf_truncate_signed                   - Undefined Weak Reference
    _printf_truncate_unsigned                 - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_mkl25z4.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_mkl25z4.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x000000c9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x000000d9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_zeroinit                   0x00000105   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_percent                          0x00000121   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_d                                0x00000123   Thumb Code     0  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    _printf_s                                0x0000012d   Thumb Code     0  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    _printf_percent_end                      0x00000137   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x0000013b   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x0000013d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x0000013f   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x00000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x00000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x00000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x00000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x00000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x00000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x00000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x00000143   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x00000143   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x00000143   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x00000149   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x00000151   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x00000155   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000155   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0000015d   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0000015f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0000015f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000163   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x00000169   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x00000169   Thumb Code     0  rt_memcpy.o(.emb_text)
    Reset_Handler                            0x000001a1   Thumb Code    12  startup_mkl25z4.o(.text)
    NMI_Handler                              0x000001ad   Thumb Code     2  startup_mkl25z4.o(.text)
    HardFault_Handler                        0x000001af   Thumb Code     2  startup_mkl25z4.o(.text)
    CMP0_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    DAC0_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA1_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA2_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA3_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    DefaultISR                               0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    FTFA_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    I2C0_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    I2C1_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    LLWU_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    LPTMR0_IRQHandler                        0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    LVD_LVW_IRQHandler                       0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    MCG_IRQHandler                           0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    PORTA_IRQHandler                         0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    PORTD_IRQHandler                         0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    RTC_IRQHandler                           0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    RTC_Seconds_IRQHandler                   0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved20_IRQHandler                    0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved39_IRQHandler                    0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved45_IRQHandler                    0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    SPI0_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    SPI1_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    TPM1_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    TPM2_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    TSI0_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    UART0_IRQHandler                         0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    UART1_IRQHandler                         0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    UART2_IRQHandler                         0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    USB0_IRQHandler                          0x000001b7   Thumb Code     0  startup_mkl25z4.o(.text)
    __user_initial_stackheap                 0x000001bd   Thumb Code     0  startup_mkl25z4.o(.text)
    SVC_Handler                              0x000001e1   Thumb Code   132  irq_cm0.o(.text)
    PendSV_Handler                           0x00000265   Thumb Code    12  irq_cm0.o(.text)
    SysTick_Handler                          0x00000271   Thumb Code    12  irq_cm0.o(.text)
    __aeabi_lmul                             0x00000285   Thumb Code    48  llmul.o(.text)
    _ll_mul                                  0x00000285   Thumb Code     0  llmul.o(.text)
    __2sprintf                               0x000002b5   Thumb Code    36  noretval__2sprintf.o(.text)
    __2snprintf                              0x000002dd   Thumb Code    50  noretval__2snprintf.o(.text)
    _printf_pre_padding                      0x00000315   Thumb Code    44  _printf_pad.o(.text)
    _printf_post_padding                     0x00000341   Thumb Code    34  _printf_pad.o(.text)
    _printf_str                              0x00000363   Thumb Code    82  _printf_str.o(.text)
    strlen                                   0x000003b5   Thumb Code    62  strlen.o(.text)
    __use_two_region_memory                  0x000003f9   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x000003fb   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x000003fd   Thumb Code     2  heapauxi.o(.text)
    __I$use$semihosting                      0x000003ff   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x000003ff   Thumb Code     2  use_no_semi.o(.text)
    _printf_int_dec                          0x00000411   Thumb Code    90  _printf_dec.o(.text)
    __printf                                 0x0000047d   Thumb Code   270  __printf_wp.o(.text)
    __aeabi_memcpy                           0x0000058b   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x0000058b   Thumb Code     0  rt_memcpy.o(.text)
    _memset_w                                0x0000060d   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x00000627   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x00000645   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x00000645   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x00000649   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x00000649   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x00000649   Thumb Code     4  rt_memclr.o(.text)
    __aeabi_uidiv                            0x0000064d   Thumb Code     0  aeabi_sdivfast.o(.text)
    __aeabi_uidivmod                         0x0000064d   Thumb Code    28  aeabi_sdivfast.o(.text)
    __aeabi_idiv                             0x00000669   Thumb Code     0  aeabi_sdivfast.o(.text)
    __aeabi_idivmod                          0x00000669   Thumb Code   460  aeabi_sdivfast.o(.text)
    __aeabi_f2iz                             0x00000835   Thumb Code     0  ffixi.o(.text)
    _ffix                                    0x00000835   Thumb Code    76  ffixi.o(.text)
    __aeabi_f2uiz                            0x00000881   Thumb Code     0  ffixui.o(.text)
    _ffixu                                   0x00000881   Thumb Code    48  ffixui.o(.text)
    __aeabi_i2f_normalise                    0x000008b1   Thumb Code    72  fflti.o(.text)
    __aeabi_i2f                              0x000008f9   Thumb Code    16  fflti.o(.text)
    _fflt                                    0x000008f9   Thumb Code     0  fflti.o(.text)
    __aeabi_ui2f                             0x00000909   Thumb Code     6  fflti.o(.text)
    _ffltu                                   0x00000909   Thumb Code     0  fflti.o(.text)
    _printf_int_common                       0x0000090f   Thumb Code   176  _printf_intcommon.o(.text)
    _printf_char_common                      0x000009cb   Thumb Code    32  _printf_char_common.o(.text)
    _sputc                                   0x000009f1   Thumb Code    10  _sputc.o(.text)
    _snputc                                  0x000009fb   Thumb Code    16  _snputc.o(.text)
    _printf_cs_common                        0x00000a0b   Thumb Code    22  _printf_char.o(.text)
    _printf_char                             0x00000a21   Thumb Code    16  _printf_char.o(.text)
    _printf_string                           0x00000a31   Thumb Code     8  _printf_char.o(.text)
    __rt_udiv10                              0x00000a39   Thumb Code    40  rtudiv10.o(.text)
    __fpl_fcmp_InfNaN                        0x00000a61   Thumb Code    96  fcmpin.o(.text)
    __fpl_cmpreturn                          0x00000ac5   Thumb Code    46  cmpret.o(.text)
    __fpl_fcheck_NaN2                        0x00000af5   Thumb Code    10  fnan2.o(.text)
    __user_libspace                          0x00000b05   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000b05   Thumb Code     0  libspace.o(.text)
    __user_setup_stackheap                   0x00000b0d   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x00000b4b   Thumb Code    16  exit.o(.text)
    __fpl_return_NaN                         0x00000b5b   Thumb Code    94  retnan.o(.text)
    _sys_exit                                0x00000bb9   Thumb Code     8  sys_exit.o(.text)
    __decompress                             0x00000bc5   Thumb Code     0  __dczerorl2.o(.text)
    __decompress1                            0x00000bc5   Thumb Code    86  __dczerorl2.o(.text)
    __semihosting_library_function           0x00000bc5   Thumb Code     0  indicate_semi.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x00000ce9   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x00000cf5   Thumb Code    44  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x00000d21   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x00000d29   Thumb Code    76  os_systick.o(.text.OS_Tick_Setup)
    osDelay                                  0x00000e15   Thumb Code    40  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x00000e3d   Thumb Code    48  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x00000e6d   Thumb Code    40  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x00000e95   Thumb Code    36  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x00000eb9   Thumb Code   116  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueGetCount                   0x00000f2d   Thumb Code    48  rtx_msgqueue.o(.text.osMessageQueueGetCount)
    osMessageQueueNew                        0x00000f5d   Thumb Code    36  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x00000f81   Thumb Code   128  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x00001001   Thumb Code    40  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x00001029   Thumb Code    40  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x00001051   Thumb Code    36  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x00001075   Thumb Code    40  rtx_mutex.o(.text.osMutexRelease)
    osRtxKernelPreInit                       0x0000109d   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x0000109f   Thumb Code   120  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x00001117   Thumb Code    78  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x00001165   Thumb Code    58  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x0000119f   Thumb Code    44  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x000011cb   Thumb Code    60  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x00001207   Thumb Code    68  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x0000130b   Thumb Code    62  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x00001349   Thumb Code   128  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x000013c9   Thumb Code   108  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x00001535   Thumb Code    56  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x0000156d   Thumb Code    80  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x0000160d   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x00001621   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x0000164d   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x00001665   Thumb Code    38  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x000016b1   Thumb Code    24  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x000016c9   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x000016d1   Thumb Code    44  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x000016fd   Thumb Code    68  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x00001741   Thumb Code    20  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x00001755   Thumb Code    60  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x00001791   Thumb Code    34  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x000017b5   Thumb Code   116  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerThread                         0x00001829   Thumb Code    60  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x000018c5   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadFlagsSet                         0x000018d1   Thumb Code    88  rtx_thread.o(.text.osThreadFlagsSet)
    osThreadNew                              0x00001929   Thumb Code    36  rtx_thread.o(.text.osThreadNew)
    ADC0_IRQHandler                          0x00002445   Thumb Code   184  control.o(i.ADC0_IRQHandler)
    Add_FX                                   0x00002519   Thumb Code     4  fx.o(i.Add_FX)
    Control_DutyCycle_Handler                0x0000251d   Thumb Code    58  control.o(i.Control_DutyCycle_Handler)
    Control_HBLED                            0x00002561   Thumb Code   462  control.o(i.Control_HBLED)
    Control_IntNonNegative_Handler           0x0000275d   Thumb Code    28  control.o(i.Control_IntNonNegative_Handler)
    Control_OnOff_Handler                    0x00002779   Thumb Code    20  control.o(i.Control_OnOff_Handler)
    Control_RGB_LEDs                         0x0000278d   Thumb Code    52  leds.o(i.Control_RGB_LEDs)
    Create_OS_Objects                        0x000027c9   Thumb Code    74  threads.o(i.Create_OS_Objects)
    DMA0_IRQHandler                          0x00002835   Thumb Code   102  dma.o(i.DMA0_IRQHandler)
    Delay                                    0x000028b9   Thumb Code    20  delay.o(i.Delay)
    Init_ADC_HBLED                           0x000028d1   Thumb Code    78  control.o(i.Init_ADC_HBLED)
    Init_Buck_HBLED                          0x00002935   Thumb Code   110  control.o(i.Init_Buck_HBLED)
    Init_Debug_Signals                       0x000029bd   Thumb Code   158  debug.o(i.Init_Debug_Signals)
    Init_RGB_LEDs                            0x00002a75   Thumb Code    82  leds.o(i.Init_RGB_LEDs)
    LCD_Erase                                0x00002b2d   Thumb Code    10  lcd_text.o(i.LCD_Erase)
    LCD_Fill_Buffer                          0x00002b3d   Thumb Code   130  st7789.o(i.LCD_Fill_Buffer)
    LCD_Fill_Rectangle                       0x00002bbf   Thumb Code   202  st7789.o(i.LCD_Fill_Rectangle)
    LCD_GPIO_Init                            0x00002c89   Thumb Code   294  st7789.o(i.LCD_GPIO_Init)
    LCD_Init                                 0x00002dc5   Thumb Code   178  st7789.o(i.LCD_Init)
    LCD_Plot_Pixel                           0x00002e91   Thumb Code   114  st7789.o(i.LCD_Plot_Pixel)
    LCD_Start_Rectangle                      0x00002f03   Thumb Code   150  st7789.o(i.LCD_Start_Rectangle)
    LCD_TS_Init                              0x00002f99   Thumb Code    24  touchscreen.o(i.LCD_TS_Init)
    LCD_TS_Read                              0x00002fb9   Thumb Code   470  touchscreen.o(i.LCD_TS_Read)
    LCD_Text_Init                            0x000031b5   Thumb Code    42  lcd_text.o(i.LCD_Text_Init)
    LCD_Text_PrintChar                       0x000031f1   Thumb Code   412  lcd_text.o(i.LCD_Text_PrintChar)
    LCD_Text_PrintStr_RC                     0x00003399   Thumb Code    82  lcd_text.o(i.LCD_Text_PrintStr_RC)
    LCD_Text_Set_Colors                      0x000033f1   Thumb Code    30  lcd_text.o(i.LCD_Text_Set_Colors)
    LCD_Write_Rectangle_Pixel                0x00003419   Thumb Code    50  st7789.o(i.LCD_Write_Rectangle_Pixel)
    Multiply_FX                              0x0000344b   Thumb Code    22  fx.o(i.Multiply_FX)
    PIT_IRQHandler                           0x00003461   Thumb Code   130  timers.o(i.PIT_IRQHandler)
    PWM_Init                                 0x00003509   Thumb Code   122  timers.o(i.PWM_Init)
    PWM_Set_Value                            0x00003595   Thumb Code     8  timers.o(i.PWM_Set_Value)
    Sound_Disable_Amp                        0x0000359d   Thumb Code    10  sound.o(i.Sound_Disable_Amp)
    Subtract_FX                              0x000035ad   Thumb Code     4  fx.o(i.Subtract_FX)
    SystemInit                               0x000035b1   Thumb Code   184  system_mkl25z4.o(i.SystemInit)
    TPM0_IRQHandler                          0x00003699   Thumb Code    44  timers.o(i.TPM0_IRQHandler)
    TPM0_Start                               0x000036d5   Thumb Code    12  timers.o(i.TPM0_Start)
    Thread_Buck_Update_Setpoint              0x000036e5   Thumb Code    12  threads.o(i.Thread_Buck_Update_Setpoint)
    Thread_Read_TS                           0x000036f1   Thumb Code    34  threads.o(i.Thread_Read_TS)
    Thread_Update_Screen                     0x00003719   Thumb Code    30  threads.o(i.Thread_Update_Screen)
    UI_Draw_Screen                           0x0000373d   Thumb Code   452  ui.o(i.UI_Draw_Screen)
    UI_Identify_Field                        0x00003955   Thumb Code   138  ui.o(i.UI_Identify_Field)
    UI_Process_Touch                         0x000039f1   Thumb Code   260  ui.o(i.UI_Process_Touch)
    UI_Update_Field_Values                   0x00003b05   Thumb Code    66  ui.o(i.UI_Update_Field_Values)
    Update_Set_Current                       0x00003b55   Thumb Code    94  control.o(i.Update_Set_Current)
    _is_digit                                0x00003bc1   Thumb Code    14  __printf_wp.o(i._is_digit)
    _mutex_acquire                           0x00003bd1   Thumb Code    44  rtx_lib.o(i._mutex_acquire)
    _mutex_free                              0x00003c01   Thumb Code    10  rtx_lib.o(i._mutex_free)
    _mutex_initialize                        0x00003c0b   Thumb Code    34  rtx_lib.o(i._mutex_initialize)
    _mutex_release                           0x00003c2d   Thumb Code    40  rtx_lib.o(i._mutex_release)
    _platform_post_stackheap_init            0x00003c59   Thumb Code     8  rtx_lib.o(i._platform_post_stackheap_init)
    main                                     0x00003c61   Thumb Code    82  main.o(i.main)
    osRtxErrorNotify                         0x00003cc1   Thumb Code     2  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x00003cc5   Thumb Code    10  rtx_config.o(i.osRtxIdleThread)
    __aeabi_fadd                             0x00003cd5   Thumb Code     0  faddsub.o(x$fpl$fadd)
    _fadd                                    0x00003cd5   Thumb Code   134  faddsub.o(x$fpl$fadd)
    __aeabi_fmul                             0x00003d61   Thumb Code     0  fmul.o(x$fpl$fmul)
    _fmul                                    0x00003d61   Thumb Code   172  fmul.o(x$fpl$fmul)
    __aeabi_cfrcmple                         0x00003e11   Thumb Code     0  frlef.o(x$fpl$frleqf)
    _frcmple                                 0x00003e11   Thumb Code    84  frlef.o(x$fpl$frleqf)
    __aeabi_fsub                             0x00003e69   Thumb Code     0  faddsub.o(x$fpl$fsub)
    _fsub                                    0x00003e69   Thumb Code   204  faddsub.o(x$fpl$fsub)
    Read_TS_attr                             0x00003f38   Data          36  threads.o(.constdata)
    __I$use$fp                               0x00003f38   Number         0  usenofp.o(x$fpl$usenofp)
    Update_Screen_attr                       0x00003f5c   Data          36  threads.o(.constdata)
    BUS_attr                                 0x00003f80   Data          36  threads.o(.constdata)
    LCD_mutex_attr                           0x00003fa4   Data          16  threads.o(.constdata)
    Lucida_Console12x19                      0x00003fc4   Data        3831  lucida_12x19.o(.constdata)
    Init_Seq_ST7789                          0x00004ebb   Data         142  st7789.o(.constdata)
    RegionTable                              0x00004f4c   Data          32  region.o(.constdata)
    NumProfileRegions                        0x00004f6c   Data           4  region.o(.constdata)
    osRtxUserSVC                             0x00004fd0   Data           4  rtx_lib.o(.constdata)
    osRtxConfig                              0x00004fe0   Data         104  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x00005054   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00005074   Number         0  anon$$obj.o(Region$$Table)
    .bss.os.msgqueue.cb$$Base                0x20000040   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20000074   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200000c4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x2000014c   Number         0  rtx_lib.o(.bss.os.thread.cb)
    g_duty_cycle                             0x20000350   Data           4  control.o(.data)
    g_enable_flash                           0x20000354   Data           4  control.o(.data)
    g_peak_set_current                       0x20000358   Data           4  control.o(.data)
    g_flash_duration                         0x2000035c   Data           4  control.o(.data)
    g_flash_period                           0x20000360   Data           4  control.o(.data)
    g_enable_control                         0x20000364   Data           4  control.o(.data)
    g_set_current                            0x20000368   Data           4  control.o(.data)
    array_count                              0x20000378   Data           4  control.o(.data)
    plot_function                            0x2000037c   Data           4  control.o(.data)
    pGain_8                                  0x20000380   Data           4  control.o(.data)
    g_measured_current                       0x2000038c   Data           4  control.o(.data)
    plantPID                                 0x20000390   Data          28  control.o(.data)
    plantPID_FX                              0x200003ac   Data          28  control.o(.data)
    read_buffer_num                          0x200003c8   Data           1  dma.o(.data)
    Reload_DMA_Byte_Count                    0x200003cc   Data           4  dma.o(.data)
    DMA_Playback_Count                       0x200003d0   Data           4  dma.o(.data)
    Reload_DMA_Source                        0x200003d4   Data           8  dma.o(.data)
    control_mode                             0x200003dc   Data           1  main.o(.data)
    t_Read_TS                                0x200003e0   Data           4  threads.o(.data)
    t_US                                     0x200003e4   Data           4  threads.o(.data)
    t_BUS                                    0x200003e8   Data           4  threads.o(.data)
    requests_q                               0x200003ec   Data           4  threads.o(.data)
    results_q                                0x200003f0   Data           4  threads.o(.data)
    LCD_mutex                                0x200003f4   Data           4  threads.o(.data)
    t_Refill_Sound_Buffer                    0x200003f8   Data           4  threads.o(.data)
    PC_val                                   0x200003fc   Data           4  timers.o(.data)
    UI_sel_field                             0x20000404   Data           4  ui.o(.data)
    Fields                                   0x20000410   Data         672  ui.o(.data)
    Slider                                   0x200006b0   Data          48  ui.o(.data)
    G_LCD_char_width                         0x200006e0   Data           1  lcd_text.o(.data)
    G_LCD_char_height                        0x200006e1   Data           1  lcd_text.o(.data)
    fg                                       0x200006e2   Data           3  lcd_text.o(.data)
    bg                                       0x200006e5   Data           3  lcd_text.o(.data)
    font                                     0x200006e8   Data           4  lcd_text.o(.data)
    font_header                              0x200006ec   Data           4  lcd_text.o(.data)
    glyph_index                              0x200006f0   Data           4  lcd_text.o(.data)
    LCD_TS_Calibrated                        0x200006f4   Data           1  touchscreen.o(.data)
    LCD_TS_X_Scale                           0x200006fc   Data           4  touchscreen.o(.data)
    LCD_TS_X_Offset                          0x20000700   Data           4  touchscreen.o(.data)
    LCD_TS_Y_Scale                           0x20000704   Data           4  touchscreen.o(.data)
    LCD_TS_Y_Offset                          0x20000708   Data           4  touchscreen.o(.data)
    TS_Min                                   0x20000714   Data           8  touchscreen.o(.data)
    TS_Max                                   0x2000071c   Data           8  touchscreen.o(.data)
    black                                    0x20000724   Data           3  colors.o(.data)
    white                                    0x20000727   Data           3  colors.o(.data)
    blue                                     0x2000072a   Data           3  colors.o(.data)
    yellow                                   0x2000072d   Data           3  colors.o(.data)
    cyan                                     0x20000730   Data           3  colors.o(.data)
    magenta                                  0x20000733   Data           3  colors.o(.data)
    dark_red                                 0x20000736   Data           3  colors.o(.data)
    dark_green                               0x20000739   Data           3  colors.o(.data)
    dark_cyan                                0x2000073c   Data           3  colors.o(.data)
    dark_magenta                             0x2000073f   Data           3  colors.o(.data)
    orange                                   0x20000742   Data           3  colors.o(.data)
    light_gray                               0x20000745   Data           3  colors.o(.data)
    dark_gray                                0x20000748   Data           3  colors.o(.data)
    adx_lost                                 0x2000074c   Data           4  profile.o(.data)
    num_lost                                 0x20000750   Data           4  profile.o(.data)
    profile_samples                          0x20000754   Data           4  profile.o(.data)
    profiling_enabled                        0x20000758   Data           1  profile.o(.data)
    RegionCount                              0x2000075c   Data           4  region.o(.data)
    SystemCoreClock                          0x20000764   Data           4  system_mkl25z4.o(.data)
    osRtxInfo                                0x20000768   Data         164  rtx_kernel.o(.data.os)
    set_current_vals                         0x2000080c   Data        3840  control.o(.bss)
    measured_current_vals                    0x2000170c   Data        3840  control.o(.bss)
    __libspace_start                         0x2000260c   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x2000266c   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000001a1

  Load Region LR_1 (Base: 0x00000000, Size: 0x00006880, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x000051d4])

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00005074, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO         1216    RESET               startup_mkl25z4.o
    0x000000c0   0x000000c0   0x00000008   Code   RO         1777  * !!!main             c_p.l(__main.o)
    0x000000c8   0x000000c8   0x0000003c   Code   RO         2037    !!!scatter          c_p.l(__scatter.o)
    0x00000104   0x00000104   0x0000001c   Code   RO         2039    !!handler_zi        c_p.l(__scatter_zi.o)
    0x00000120   0x00000120   0x00000002   Code   RO         1762    .ARM.Collect$$_printf_percent$$00000000  c_p.l(_printf_percent.o)
    0x00000122   0x00000122   0x0000000a   Code   RO         1761    .ARM.Collect$$_printf_percent$$00000009  c_p.l(_printf_d.o)
    0x0000012c   0x0000012c   0x0000000a   Code   RO         1760    .ARM.Collect$$_printf_percent$$00000014  c_p.l(_printf_s.o)
    0x00000136   0x00000136   0x00000004   Code   RO         1829    .ARM.Collect$$_printf_percent$$00000017  c_p.l(_printf_percent_end.o)
    0x0000013a   0x0000013a   0x00000002   Code   RO         1905    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1918    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1920    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1923    .ARM.Collect$$libinit$$0000000A  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1925    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1927    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1930    .ARM.Collect$$libinit$$00000011  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1932    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1934    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1936    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1938    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1940    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1942    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1944    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1946    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1948    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1950    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1954    .ARM.Collect$$libinit$$0000002C  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1956    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1958    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO         1960    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x0000013c   0x0000013c   0x00000002   Code   RO         1961    .ARM.Collect$$libinit$$00000033  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000002   Code   RO         1992    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x00000140   0x00000140   0x00000000   Code   RO         2018    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x00000140   0x00000140   0x00000000   Code   RO         2020    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x00000140   0x00000140   0x00000000   Code   RO         2023    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x00000140   0x00000140   0x00000000   Code   RO         2026    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x00000140   0x00000140   0x00000000   Code   RO         2028    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x00000140   0x00000140   0x00000000   Code   RO         2031    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x00000140   0x00000140   0x00000002   Code   RO         2032    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1812    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1859    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x00000142   0x00000142   0x00000006   Code   RO         1871    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x00000148   0x00000148   0x00000008   Code   RO         1860    .ARM.Collect$$rtentry$$00000008  c_p.l(__rtentry2.o)
    0x00000150   0x00000150   0x00000004   Code   RO         1862    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x00000154   0x00000154   0x00000000   Code   RO         1864    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x00000154   0x00000154   0x00000008   Code   RO         1865    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x0000015c   0x0000015c   0x00000002   Code   RO         1909    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x0000015e   0x0000015e   0x00000000   Code   RO         1965    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x0000015e   0x0000015e   0x00000004   Code   RO         1966    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x00000162   0x00000162   0x00000006   Code   RO         1967    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x00000168   0x00000168   0x00000038   Code   RO         1765    .emb_text           c_p.l(rt_memcpy.o)
    0x000001a0   0x000001a0   0x00000040   Code   RO         1218  * .text               startup_mkl25z4.o
    0x000001e0   0x000001e0   0x000000a4   Code   RO         1564    .text               RTX_CM0.lib(irq_cm0.o)
    0x00000284   0x00000284   0x00000030   Code   RO         1722    .text               c_p.l(llmul.o)
    0x000002b4   0x000002b4   0x00000028   Code   RO         1728    .text               c_p.l(noretval__2sprintf.o)
    0x000002dc   0x000002dc   0x00000038   Code   RO         1730    .text               c_p.l(noretval__2snprintf.o)
    0x00000314   0x00000314   0x0000004e   Code   RO         1734    .text               c_p.l(_printf_pad.o)
    0x00000362   0x00000362   0x00000052   Code   RO         1736    .text               c_p.l(_printf_str.o)
    0x000003b4   0x000003b4   0x00000044   Code   RO         1763    .text               c_p.l(strlen.o)
    0x000003f8   0x000003f8   0x00000006   Code   RO         1775    .text               c_p.l(heapauxi.o)
    0x000003fe   0x000003fe   0x00000002   Code   RO         1981    .text               c_p.l(use_no_semi.o)
    0x00000400   0x00000400   0x00000010   Code   RO         1217    .ARM.__at_0x400     startup_mkl25z4.o
    0x00000410   0x00000410   0x0000006c   Code   RO         1738    .text               c_p.l(_printf_dec.o)
    0x0000047c   0x0000047c   0x0000010e   Code   RO         1748    .text               c_p.l(__printf_wp.o)
    0x0000058a   0x0000058a   0x00000082   Code   RO         1766    .text               c_p.l(rt_memcpy.o)
    0x0000060c   0x0000060c   0x00000040   Code   RO         1769    .text               c_p.l(rt_memclr.o)
    0x0000064c   0x0000064c   0x000001e8   Code   RO         1771    .text               c_p.l(aeabi_sdivfast.o)
    0x00000834   0x00000834   0x0000004c   Code   RO         1794    .text               fz_ps.l(ffixi.o)
    0x00000880   0x00000880   0x00000030   Code   RO         1796    .text               fz_ps.l(ffixui.o)
    0x000008b0   0x000008b0   0x0000005e   Code   RO         1798    .text               fz_ps.l(fflti.o)
    0x0000090e   0x0000090e   0x000000b0   Code   RO         1819    .text               c_p.l(_printf_intcommon.o)
    0x000009be   0x000009be   0x00000002   PAD
    0x000009c0   0x000009c0   0x00000030   Code   RO         1821    .text               c_p.l(_printf_char_common.o)
    0x000009f0   0x000009f0   0x0000000a   Code   RO         1823    .text               c_p.l(_sputc.o)
    0x000009fa   0x000009fa   0x00000010   Code   RO         1825    .text               c_p.l(_snputc.o)
    0x00000a0a   0x00000a0a   0x0000002e   Code   RO         1827    .text               c_p.l(_printf_char.o)
    0x00000a38   0x00000a38   0x00000028   Code   RO         1830    .text               c_p.l(rtudiv10.o)
    0x00000a60   0x00000a60   0x00000064   Code   RO         1832    .text               fz_ps.l(fcmpin.o)
    0x00000ac4   0x00000ac4   0x0000002e   Code   RO         1884    .text               fz_ps.l(cmpret.o)
    0x00000af2   0x00000af2   0x00000002   PAD
    0x00000af4   0x00000af4   0x00000010   Code   RO         1886    .text               fz_ps.l(fnan2.o)
    0x00000b04   0x00000b04   0x00000008   Code   RO         1890    .text               c_p.l(libspace.o)
    0x00000b0c   0x00000b0c   0x0000003e   Code   RO         1893    .text               c_p.l(sys_stackheap_outer.o)
    0x00000b4a   0x00000b4a   0x00000010   Code   RO         1896    .text               c_p.l(exit.o)
    0x00000b5a   0x00000b5a   0x0000005e   Code   RO         1906    .text               fz_ps.l(retnan.o)
    0x00000bb8   0x00000bb8   0x0000000c   Code   RO         1962    .text               c_p.l(sys_exit.o)
    0x00000bc4   0x00000bc4   0x00000000   Code   RO         1983    .text               c_p.l(indicate_semi.o)
    0x00000bc4   0x00000bc4   0x00000056   Code   RO         2035    .text               c_p.l(__dczerorl2.o)
    0x00000c1a   0x00000c1a   0x0000004c   Code   RO         1547    .text.MessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000c66   0x00000c66   0x00000064   Code   RO         1541    .text.MessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000cca   0x00000cca   0x0000001e   Code   RO         1539    .text.MessageQueueRemove  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000ce8   0x00000ce8   0x0000000c   Code   RO         1699    .text.OS_Tick_AcknowledgeIRQ  RTX_CM0.lib(os_systick.o)
    0x00000cf4   0x00000cf4   0x0000002c   Code   RO         1695    .text.OS_Tick_Enable  RTX_CM0.lib(os_systick.o)
    0x00000d20   0x00000d20   0x00000006   Code   RO         1701    .text.OS_Tick_GetIRQn  RTX_CM0.lib(os_systick.o)
    0x00000d26   0x00000d26   0x00000002   PAD
    0x00000d28   0x00000d28   0x0000004c   Code   RO         1693    .text.OS_Tick_Setup  RTX_CM0.lib(os_systick.o)
    0x00000d74   0x00000d74   0x00000052   Code   RO         1402    .text.ThreadFlagsCheck  RTX_CM0.lib(rtx_thread.o)
    0x00000dc6   0x00000dc6   0x00000002   PAD
    0x00000dc8   0x00000dc8   0x0000004c   Code   RO         1585    .text.TimerInsert   RTX_CM0.lib(rtx_timer.o)
    0x00000e14   0x00000e14   0x00000028   Code   RO         1455    .text.osDelay       RTX_CM0.lib(rtx_delay.o)
    0x00000e3c   0x00000e3c   0x00000030   Code   RO         1265    .text.osKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x00000e6c   0x00000e6c   0x00000028   Code   RO         1259    .text.osKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x00000e94   0x00000e94   0x00000024   Code   RO         1269    .text.osKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x00000eb8   0x00000eb8   0x00000074   Code   RO         1513    .text.osMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000f2c   0x00000f2c   0x00000030   Code   RO         1523    .text.osMessageQueueGetCount  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000f5c   0x00000f5c   0x00000024   Code   RO         1507    .text.osMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000f80   0x00000f80   0x00000080   Code   RO         1511    .text.osMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001000   0x00001000   0x00000028   Code   RO         1478    .text.osMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x00001028   0x00001028   0x00000028   Code   RO         1484    .text.osMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x00001050   0x00001050   0x00000024   Code   RO         1474    .text.osMutexNew    RTX_CM0.lib(rtx_mutex.o)
    0x00001074   0x00001074   0x00000028   Code   RO         1480    .text.osMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x0000109c   0x0000109c   0x00000002   Code   RO         1257    .text.osRtxKernelPreInit  RTX_CM0.lib(rtx_kernel.o)
    0x0000109e   0x0000109e   0x00000078   Code   RO         1612    .text.osRtxMemoryAlloc  RTX_CM0.lib(rtx_memory.o)
    0x00001116   0x00001116   0x0000004e   Code   RO         1614    .text.osRtxMemoryFree  RTX_CM0.lib(rtx_memory.o)
    0x00001164   0x00001164   0x0000003a   Code   RO         1610    .text.osRtxMemoryInit  RTX_CM0.lib(rtx_memory.o)
    0x0000119e   0x0000119e   0x0000002c   Code   RO         1627    .text.osRtxMemoryPoolAlloc  RTX_CM0.lib(rtx_mempool.o)
    0x000011ca   0x000011ca   0x0000003c   Code   RO         1629    .text.osRtxMemoryPoolFree  RTX_CM0.lib(rtx_mempool.o)
    0x00001206   0x00001206   0x00000044   Code   RO         1625    .text.osRtxMemoryPoolInit  RTX_CM0.lib(rtx_mempool.o)
    0x0000124a   0x0000124a   0x000000c0   Code   RO         1537    .text.osRtxMessageQueuePostProcess  RTX_CM0.lib(rtx_msgqueue.o)
    0x0000130a   0x0000130a   0x0000003e   Code   RO         1472    .text.osRtxMutexOwnerRelease  RTX_CM0.lib(rtx_mutex.o)
    0x00001348   0x00001348   0x00000080   Code   RO         1680    .text.osRtxPendSV_Handler  RTX_CM0.lib(rtx_system.o)
    0x000013c8   0x000013c8   0x0000006c   Code   RO         1682    .text.osRtxPostProcess  RTX_CM0.lib(rtx_system.o)
    0x00001434   0x00001434   0x00000038   Code   RO         1342    .text.osRtxThreadBlock  RTX_CM0.lib(rtx_thread.o)
    0x0000146c   0x0000146c   0x0000007c   Code   RO         1350    .text.osRtxThreadDelayInsert  RTX_CM0.lib(rtx_thread.o)
    0x000014e8   0x000014e8   0x0000004c   Code   RO         1346    .text.osRtxThreadDelayRemove  RTX_CM0.lib(rtx_thread.o)
    0x00001534   0x00001534   0x00000038   Code   RO         1332    .text.osRtxThreadDelayTick  RTX_CM0.lib(rtx_thread.o)
    0x0000156c   0x0000156c   0x00000050   Code   RO         1340    .text.osRtxThreadDispatch  RTX_CM0.lib(rtx_thread.o)
    0x000015bc   0x000015bc   0x00000050   Code   RO         1426    .text.osRtxThreadFree  RTX_CM0.lib(rtx_thread.o)
    0x0000160c   0x0000160c   0x00000014   Code   RO         1324    .text.osRtxThreadListGet  RTX_CM0.lib(rtx_thread.o)
    0x00001620   0x00001620   0x0000002c   Code   RO         1322    .text.osRtxThreadListPut  RTX_CM0.lib(rtx_thread.o)
    0x0000164c   0x0000164c   0x00000018   Code   RO         1328    .text.osRtxThreadListRemove  RTX_CM0.lib(rtx_thread.o)
    0x00001664   0x00001664   0x00000026   Code   RO         1326    .text.osRtxThreadListSort  RTX_CM0.lib(rtx_thread.o)
    0x0000168a   0x0000168a   0x00000026   Code   RO         1400    .text.osRtxThreadPostProcess  RTX_CM0.lib(rtx_thread.o)
    0x000016b0   0x000016b0   0x00000018   Code   RO         1330    .text.osRtxThreadReadyPut  RTX_CM0.lib(rtx_thread.o)
    0x000016c8   0x000016c8   0x00000006   Code   RO         1334    .text.osRtxThreadRegPtr  RTX_CM0.lib(rtx_thread.o)
    0x000016ce   0x000016ce   0x00000002   PAD
    0x000016d0   0x000016d0   0x0000002c   Code   RO         1338    .text.osRtxThreadStackCheck  RTX_CM0.lib(rtx_thread.o)
    0x000016fc   0x000016fc   0x00000044   Code   RO         1352    .text.osRtxThreadStartup  RTX_CM0.lib(rtx_thread.o)
    0x00001740   0x00001740   0x00000014   Code   RO         1336    .text.osRtxThreadSwitch  RTX_CM0.lib(rtx_thread.o)
    0x00001754   0x00001754   0x0000003c   Code   RO         1348    .text.osRtxThreadWaitEnter  RTX_CM0.lib(rtx_thread.o)
    0x00001790   0x00001790   0x00000022   Code   RO         1344    .text.osRtxThreadWaitExit  RTX_CM0.lib(rtx_thread.o)
    0x000017b2   0x000017b2   0x00000002   PAD
    0x000017b4   0x000017b4   0x00000074   Code   RO         1678    .text.osRtxTick_Handler  RTX_CM0.lib(rtx_system.o)
    0x00001828   0x00001828   0x0000003c   Code   RO         1569    .text.osRtxTimerThread  RTX_CM0.lib(rtx_timer.o)
    0x00001864   0x00001864   0x00000060   Code   RO         1571    .text.osRtxTimerTick  RTX_CM0.lib(rtx_timer.o)
    0x000018c4   0x000018c4   0x0000000c   Code   RO         1384    .text.osThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x000018d0   0x000018d0   0x00000058   Code   RO         1392    .text.osThreadFlagsSet  RTX_CM0.lib(rtx_thread.o)
    0x00001928   0x00001928   0x00000024   Code   RO         1356    .text.osThreadNew   RTX_CM0.lib(rtx_thread.o)
    0x0000194c   0x0000194c   0x00000012   Code   RO         1459    .text.svcRtxDelay   RTX_CM0.lib(rtx_delay.o)
    0x0000195e   0x0000195e   0x00000002   PAD
    0x00001960   0x00001960   0x0000000c   Code   RO         1267    .text.svcRtxKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x0000196c   0x0000196c   0x00000144   Code   RO         1297    .text.svcRtxKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x00001ab0   0x00001ab0   0x00000084   Code   RO         1299    .text.svcRtxKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x00001b34   0x00001b34   0x000000ec   Code   RO         1549    .text.svcRtxMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001c20   0x00001c20   0x00000012   Code   RO         1525    .text.svcRtxMessageQueueGetCount  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001c32   0x00001c32   0x00000002   PAD
    0x00001c34   0x00001c34   0x000001cc   Code   RO         1535    .text.svcRtxMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001e00   0x00001e00   0x000000d4   Code   RO         1545    .text.svcRtxMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001ed4   0x00001ed4   0x000000a0   Code   RO         1490    .text.svcRtxMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x00001f74   0x00001f74   0x000000c0   Code   RO         1496    .text.svcRtxMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x00002034   0x00002034   0x00000074   Code   RO         1486    .text.svcRtxMutexNew  RTX_CM0.lib(rtx_mutex.o)
    0x000020a8   0x000020a8   0x000000bc   Code   RO         1492    .text.svcRtxMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x00002164   0x00002164   0x00000074   Code   RO         1430    .text.svcRtxThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x000021d8   0x000021d8   0x0000006a   Code   RO         1438    .text.svcRtxThreadFlagsSet  RTX_CM0.lib(rtx_thread.o)
    0x00002242   0x00002242   0x00000002   PAD
    0x00002244   0x00002244   0x00000200   Code   RO         1354    .text.svcRtxThreadNew  RTX_CM0.lib(rtx_thread.o)
    0x00002444   0x00002444   0x000000d4   Code   RO            3    i.ADC0_IRQHandler   control.o
    0x00002518   0x00002518   0x00000004   Code   RO          273    i.Add_FX            fx.o
    0x0000251c   0x0000251c   0x00000044   Code   RO            4    i.Control_DutyCycle_Handler  control.o
    0x00002560   0x00002560   0x000001fc   Code   RO            5    i.Control_HBLED     control.o
    0x0000275c   0x0000275c   0x0000001c   Code   RO            6    i.Control_IntNonNegative_Handler  control.o
    0x00002778   0x00002778   0x00000014   Code   RO            7    i.Control_OnOff_Handler  control.o
    0x0000278c   0x0000278c   0x0000003c   Code   RO          305    i.Control_RGB_LEDs  leds.o
    0x000027c8   0x000027c8   0x0000006c   Code   RO          469    i.Create_OS_Objects  threads.o
    0x00002834   0x00002834   0x00000084   Code   RO          226    i.DMA0_IRQHandler   dma.o
    0x000028b8   0x000028b8   0x00000018   Code   RO          199    i.Delay             delay.o
    0x000028d0   0x000028d0   0x00000064   Code   RO            8    i.Init_ADC_HBLED    control.o
    0x00002934   0x00002934   0x00000088   Code   RO            9    i.Init_Buck_HBLED   control.o
    0x000029bc   0x000029bc   0x000000b8   Code   RO          176    i.Init_Debug_Signals  debug.o
    0x00002a74   0x00002a74   0x00000068   Code   RO          306    i.Init_RGB_LEDs     leds.o
    0x00002adc   0x00002adc   0x00000028   Code   RO          837    i.LCD_24S_Write_Command  st7789.o
    0x00002b04   0x00002b04   0x00000028   Code   RO          838    i.LCD_24S_Write_Data  st7789.o
    0x00002b2c   0x00002b2c   0x00000010   Code   RO          739    i.LCD_Erase         lcd_text.o
    0x00002b3c   0x00002b3c   0x00000082   Code   RO          840    i.LCD_Fill_Buffer   st7789.o
    0x00002bbe   0x00002bbe   0x000000ca   Code   RO          841    i.LCD_Fill_Rectangle  st7789.o
    0x00002c88   0x00002c88   0x0000013c   Code   RO          842    i.LCD_GPIO_Init     st7789.o
    0x00002dc4   0x00002dc4   0x000000cc   Code   RO          843    i.LCD_Init          st7789.o
    0x00002e90   0x00002e90   0x00000072   Code   RO          844    i.LCD_Plot_Pixel    st7789.o
    0x00002f02   0x00002f02   0x00000096   Code   RO          849    i.LCD_Start_Rectangle  st7789.o
    0x00002f98   0x00002f98   0x00000020   Code   RO          954    i.LCD_TS_Init       touchscreen.o
    0x00002fb8   0x00002fb8   0x000001fc   Code   RO          955    i.LCD_TS_Read       touchscreen.o
    0x000031b4   0x000031b4   0x0000003c   Code   RO          741    i.LCD_Text_Init     lcd_text.o
    0x000031f0   0x000031f0   0x000001a8   Code   RO          742    i.LCD_Text_PrintChar  lcd_text.o
    0x00003398   0x00003398   0x00000058   Code   RO          744    i.LCD_Text_PrintStr_RC  lcd_text.o
    0x000033f0   0x000033f0   0x00000028   Code   RO          745    i.LCD_Text_Set_Colors  lcd_text.o
    0x00003418   0x00003418   0x00000032   Code   RO          850    i.LCD_Write_Rectangle_Pixel  st7789.o
    0x0000344a   0x0000344a   0x00000016   Code   RO          274    i.Multiply_FX       fx.o
    0x00003460   0x00003460   0x000000a8   Code   RO          538    i.PIT_IRQHandler    timers.o
    0x00003508   0x00003508   0x0000008c   Code   RO          542    i.PWM_Init          timers.o
    0x00003594   0x00003594   0x00000008   Code   RO          543    i.PWM_Set_Value     timers.o
    0x0000359c   0x0000359c   0x00000010   Code   RO          382    i.Sound_Disable_Amp  sound.o
    0x000035ac   0x000035ac   0x00000004   Code   RO          275    i.Subtract_FX       fx.o
    0x000035b0   0x000035b0   0x000000e8   Code   RO         1227    i.SystemInit        system_mkl25z4.o
    0x00003698   0x00003698   0x0000003c   Code   RO          544    i.TPM0_IRQHandler   timers.o
    0x000036d4   0x000036d4   0x00000010   Code   RO          546    i.TPM0_Start        timers.o
    0x000036e4   0x000036e4   0x0000000c   Code   RO          470    i.Thread_Buck_Update_Setpoint  threads.o
    0x000036f0   0x000036f0   0x00000028   Code   RO          471    i.Thread_Read_TS    threads.o
    0x00003718   0x00003718   0x00000024   Code   RO          472    i.Thread_Update_Screen  threads.o
    0x0000373c   0x0000373c   0x00000218   Code   RO          628    i.UI_Draw_Screen    ui.o
    0x00003954   0x00003954   0x0000009c   Code   RO          630    i.UI_Identify_Field  ui.o
    0x000039f0   0x000039f0   0x00000114   Code   RO          631    i.UI_Process_Touch  ui.o
    0x00003b04   0x00003b04   0x00000050   Code   RO          633    i.UI_Update_Field_Values  ui.o
    0x00003b54   0x00003b54   0x0000006c   Code   RO           15    i.Update_Set_Current  control.o
    0x00003bc0   0x00003bc0   0x0000000e   Code   RO         1750    i._is_digit         c_p.l(__printf_wp.o)
    0x00003bce   0x00003bce   0x00000002   PAD
    0x00003bd0   0x00003bd0   0x00000030   Code   RO         1105    i._mutex_acquire    rtx_lib.o
    0x00003c00   0x00003c00   0x0000000a   Code   RO         1106    i._mutex_free       rtx_lib.o
    0x00003c0a   0x00003c0a   0x00000022   Code   RO         1107    i._mutex_initialize  rtx_lib.o
    0x00003c2c   0x00003c2c   0x0000002c   Code   RO         1108    i._mutex_release    rtx_lib.o
    0x00003c58   0x00003c58   0x00000008   Code   RO         1109    i._platform_post_stackheap_init  rtx_lib.o
    0x00003c60   0x00003c60   0x00000060   Code   RO          331    i.main              main.o
    0x00003cc0   0x00003cc0   0x00000002   Code   RO         1186    i.osRtxErrorNotify  rtx_config.o
    0x00003cc2   0x00003cc2   0x00000002   PAD
    0x00003cc4   0x00003cc4   0x00000010   Code   RO         1187    i.osRtxIdleThread   rtx_config.o
    0x00003cd4   0x00003cd4   0x0000008c   Code   RO         1785    x$fpl$fadd          fz_ps.l(faddsub.o)
    0x00003d60   0x00003d60   0x000000b0   Code   RO         1800    x$fpl$fmul          fz_ps.l(fmul.o)
    0x00003e10   0x00003e10   0x00000058   Code   RO         1802    x$fpl$frleqf        fz_ps.l(frlef.o)
    0x00003e68   0x00003e68   0x000000d0   Code   RO         1787    x$fpl$fsub          fz_ps.l(faddsub.o)
    0x00003f38   0x00003f38   0x00000000   Code   RO         1836    x$fpl$usenofp       fz_ps.l(usenofp.o)
    0x00003f38   0x00003f38   0x0000007c   Data   RO          473    .constdata          threads.o
    0x00003fb4   0x00003fb4   0x00000010   Data   RO          635    .constdata          ui.o
    0x00003fc4   0x00003fc4   0x00000ef7   Data   RO          817    .constdata          lucida_12x19.o
    0x00004ebb   0x00004ebb   0x0000008e   Data   RO          852    .constdata          st7789.o
    0x00004f49   0x00004f49   0x00000003   PAD
    0x00004f4c   0x00004f4c   0x00000020   Data   RO         1085    .constdata          region.o
    0x00004f6c   0x00004f6c   0x00000004   Data   RO         1086    .constdata          region.o
    0x00004f70   0x00004f70   0x00000024   Data   RO         1119    .constdata          rtx_lib.o
    0x00004f94   0x00004f94   0x00000024   Data   RO         1120    .constdata          rtx_lib.o
    0x00004fb8   0x00004fb8   0x00000018   Data   RO         1121    .constdata          rtx_lib.o
    0x00004fd0   0x00004fd0   0x00000004   Data   RO         1122    .constdata          rtx_lib.o
    0x00004fd4   0x00004fd4   0x0000000a   Data   RO          474    .conststring        threads.o
    0x00004fde   0x00004fde   0x00000002   PAD
    0x00004fe0   0x00004fe0   0x00000068   Data   RO         1125    .rodata             rtx_lib.o
    0x00005048   0x00005048   0x0000000b   Data   RO         1311    .rodata.str1.4      RTX_CM0.lib(rtx_kernel.o)
    0x00005053   0x00005053   0x00000001   PAD
    0x00005054   0x00005054   0x00000020   Data   RO         2033    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x1ffff000, Load base: 0x00005074, Size: 0x0000180c, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00000160])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x1ffff000   COMPRESSED   0x00001000   Data   RW         1110    .bss.os             rtx_lib.o
    0x20000000   COMPRESSED   0x00000040   Data   RW         1111    .bss.os             rtx_lib.o
    0x20000040   COMPRESSED   0x00000034   Data   RW         1113    .bss.os.msgqueue.cb  rtx_lib.o
    0x20000074   COMPRESSED   0x00000050   Data   RW         1114    .bss.os.msgqueue.mem  rtx_lib.o
    0x200000c4   COMPRESSED   0x00000044   Data   RW         1115    .bss.os.thread.cb   rtx_lib.o
    0x20000108   COMPRESSED   0x00000044   Data   RW         1116    .bss.os.thread.cb   rtx_lib.o
    0x2000014c   COMPRESSED   0x00000004   PAD
    0x20000150   COMPRESSED   0x00000100   Data   RW         1117    .bss.os.thread.stack  rtx_lib.o
    0x20000250   COMPRESSED   0x00000100   Data   RW         1118    .bss.os.thread.stack  rtx_lib.o
    0x20000350   COMPRESSED   0x00000078   Data   RW           17    .data               control.o
    0x200003c8   COMPRESSED   0x00000014   Data   RW          229    .data               dma.o
    0x200003dc   COMPRESSED   0x00000001   Data   RW          332    .data               main.o
    0x200003dd   COMPRESSED   0x00000003   PAD
    0x200003e0   COMPRESSED   0x00000018   Data   RW          475    .data               threads.o
    0x200003f8   COMPRESSED   0x00000004   Data   RW          477    .data               threads.o
    0x200003fc   COMPRESSED   0x00000008   Data   RW          549    .data               timers.o
    0x20000404   COMPRESSED   0x000002dc   Data   RW          636    .data               ui.o
    0x200006e0   COMPRESSED   0x00000014   Data   RW          750    .data               lcd_text.o
    0x200006f4   COMPRESSED   0x00000030   Data   RW          956    .data               touchscreen.o
    0x20000724   COMPRESSED   0x00000003   Data   RW         1000    .data               colors.o
    0x20000727   COMPRESSED   0x00000003   Data   RW         1001    .data               colors.o
    0x2000072a   COMPRESSED   0x00000003   Data   RW         1004    .data               colors.o
    0x2000072d   COMPRESSED   0x00000003   Data   RW         1005    .data               colors.o
    0x20000730   COMPRESSED   0x00000003   Data   RW         1006    .data               colors.o
    0x20000733   COMPRESSED   0x00000003   Data   RW         1007    .data               colors.o
    0x20000736   COMPRESSED   0x00000003   Data   RW         1008    .data               colors.o
    0x20000739   COMPRESSED   0x00000003   Data   RW         1009    .data               colors.o
    0x2000073c   COMPRESSED   0x00000003   Data   RW         1012    .data               colors.o
    0x2000073f   COMPRESSED   0x00000003   Data   RW         1013    .data               colors.o
    0x20000742   COMPRESSED   0x00000003   Data   RW         1014    .data               colors.o
    0x20000745   COMPRESSED   0x00000003   Data   RW         1015    .data               colors.o
    0x20000748   COMPRESSED   0x00000003   Data   RW         1016    .data               colors.o
    0x2000074b   COMPRESSED   0x00000001   PAD
    0x2000074c   COMPRESSED   0x00000004   Data   RW         1035    .data               profile.o
    0x20000750   COMPRESSED   0x00000004   Data   RW         1036    .data               profile.o
    0x20000754   COMPRESSED   0x00000004   Data   RW         1037    .data               profile.o
    0x20000758   COMPRESSED   0x00000001   Data   RW         1038    .data               profile.o
    0x20000759   COMPRESSED   0x00000003   PAD
    0x2000075c   COMPRESSED   0x00000004   Data   RW         1087    .data               region.o
    0x20000760   COMPRESSED   0x00000001   Data   RW         1124    .data               rtx_lib.o
    0x20000761   COMPRESSED   0x00000003   PAD
    0x20000764   COMPRESSED   0x00000004   Data   RW         1228    .data               system_mkl25z4.o
    0x20000768   COMPRESSED   0x000000a4   Data   RW         1312    .data.os            RTX_CM0.lib(rtx_kernel.o)


    Execution Region ER_ZI (Exec base: 0x2000080c, Load base: 0x000051d4, Size: 0x00002164, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2000080c        -       0x00001e00   Zero   RW           16    .bss                control.o
    0x2000260c        -       0x00000060   Zero   RW         1891    .bss                c_p.l(libspace.o)
    0x2000266c        -       0x00000001   Zero   RW         1711    .bss.PendST         RTX_CM0.lib(os_systick.o)
    0x2000266d   0x000051d4   0x00000003   PAD
    0x20002670        -       0x00000000   Zero   RW         1215    HEAP                startup_mkl25z4.o
    0x20002670        -       0x00000300   Zero   RW         1214    STACK               startup_mkl25z4.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0          0         39          0       1098   colors.o
      1180        152          0        120       7680     240504   control.o
       184         26          0          0          0        521   debug.o
        24          4          0          0          0        796   delay.o
       132         30          0         20          0     213076   dma.o
        30          0          0          0          0       1477   fx.o
         0          0          0          0          0       2571   lcd_graphics.o
       628         52          0         20          0       6057   lcd_text.o
       164         30          0          0          0       1071   leds.o
         0          0       3831          0          0        554   lucida_12x19.o
        96         14          0          1          0       3629   main.o
         0          0          0         13          0        406   profile.o
         0          0         36          4          0       1062   region.o
        18          6          0          0          0        893   rtx_config.o
       144          8        204       4941          0      11823   rtx_lib.o
        16          6          0          0          0        396   sound.o
      1246         56        142          0          0       6962   st7789.o
        80         44        192          0        768        880   startup_mkl25z4.o
       232         48          0          4          0        823   system_mkl25z4.o
       196         46        134         28          0       6966   threads.o
       392         76          0          8          0       3869   timers.o
       540         46          0         48          0       3782   touchscreen.o
      1048        132         16        732          0       4977   ui.o

    ----------------------------------------------------------------------
      6352        776       4592       5992       8448     514193   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         2          0          5         14          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       164          8          0          0          0        496   irq_cm0.o
       138         32          0          0          1       2742   os_systick.o
        58          4          0          0          0       2717   rtx_delay.o
       594         48         11        164          0      15944   rtx_kernel.o
       256          0          0          0          0       2691   rtx_memory.o
       172          0          0          0          0      14194   rtx_mempool.o
      1652         48          0          0          0      17916   rtx_msgqueue.o
       874         32          0          0          0       9093   rtx_mutex.o
       352         26          0          0          0       4610   rtx_system.o
      1844        100          0          0          0      30751   rtx_thread.o
       232         20          0          0          0       9904   rtx_timer.o
        86          0          0          0          0          0   __dczerorl2.o
         8          0          0          0          0         68   __main.o
       284          0          0          0          0        136   __printf_wp.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        46          0          0          0          0        100   _printf_char.o
        48          6          0          0          0         88   _printf_char_common.o
        10          0          0          0          0          0   _printf_d.o
       108         18          0          0          0         76   _printf_dec.o
       176          0          0          0          0         84   _printf_intcommon.o
        78          0          0          0          0        100   _printf_pad.o
         2          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
        10          0          0          0          0          0   _printf_s.o
        82          0          0          0          0         72   _printf_str.o
        16          0          0          0          0         60   _snputc.o
        10          0          0          0          0         60   _sputc.o
       488          0          0          0          0         92   aeabi_sdivfast.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        48          0          0          0          0         72   llmul.o
        56          6          0          0          0         84   noretval__2snprintf.o
        40          4          0          0          0         84   noretval__2sprintf.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        40          0          0          0          0         60   rtudiv10.o
        68          6          0          0          0         72   strlen.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        46          0          0          0          0         60   cmpret.o
       348          8          0          0          0        160   faddsub.o
       100          4          0          0          0         68   fcmpin.o
        76          0          0          0          0         68   ffixi.o
        48          0          0          0          0         60   ffixui.o
        94          0          0          0          0         92   fflti.o
       176          4          0          0          0         80   fmul.o
        16          6          0          0          0         68   fnan2.o
        88          4          0          0          0         76   frlef.o
        94          0          0          0          0         68   retnan.o
         0          0          0          0          0          0   usenofp.o

    ----------------------------------------------------------------------
      9640        400         12        164        100     113898   Library Totals
        20          0          1          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      6336        318         11        164          1     111058   RTX_CM0.lib
      2198         56          0          0         96       2040   c_p.l
      1086         26          0          0          0        800   fz_ps.l

    ----------------------------------------------------------------------
      9640        400         12        164        100     113898   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     15992       1176       4604       6156       8548     624151   Grand Totals
     15992       1176       4604        352       8548     624151   ELF Image Totals (compressed)
     15992       1176       4604        352          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                20596 (  20.11kB)
    Total RW  Size (RW Data + ZI Data)             14704 (  14.36kB)
    Total ROM Size (Code + RO Data + RW Data)      20948 (  20.46kB)

==============================================================================

